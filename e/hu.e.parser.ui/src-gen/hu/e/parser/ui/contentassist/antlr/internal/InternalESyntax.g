/*
* generated by Xtext
*/
grammar InternalESyntax;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package hu.e.parser.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.e.parser.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import hu.e.parser.services.ESyntaxGrammarAccess;

}

@parser::members {
 
 	private ESyntaxGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ESyntaxGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit 
:
{ before(grammarAccess.getCompilationUnitRule()); }
	 ruleCompilationUnit
{ after(grammarAccess.getCompilationUnitRule()); } 
	 EOF 
;

// Rule CompilationUnit
ruleCompilationUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompilationUnitAccess().getAlternatives()); }
(rule__CompilationUnit__Alternatives)
{ after(grammarAccess.getCompilationUnitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLITERAL
entryRuleLITERAL 
:
{ before(grammarAccess.getLITERALRule()); }
	 ruleLITERAL
{ after(grammarAccess.getLITERALRule()); } 
	 EOF 
;

// Rule LITERAL
ruleLITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLITERALAccess().getAlternatives()); }
(rule__LITERAL__Alternatives)
{ after(grammarAccess.getLITERALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationDefinition
entryRuleAnnotationDefinition 
:
{ before(grammarAccess.getAnnotationDefinitionRule()); }
	 ruleAnnotationDefinition
{ after(grammarAccess.getAnnotationDefinitionRule()); } 
	 EOF 
;

// Rule AnnotationDefinition
ruleAnnotationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getGroup()); }
(rule__AnnotationDefinition__Group__0)
{ after(grammarAccess.getAnnotationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibrary
entryRuleLibrary 
:
{ before(grammarAccess.getLibraryRule()); }
	 ruleLibrary
{ after(grammarAccess.getLibraryRule()); } 
	 EOF 
;

// Rule Library
ruleLibrary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryAccess().getGroup()); }
(rule__Library__Group__0)
{ after(grammarAccess.getLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibraryItem
entryRuleLibraryItem 
:
{ before(grammarAccess.getLibraryItemRule()); }
	 ruleLibraryItem
{ after(grammarAccess.getLibraryItemRule()); } 
	 EOF 
;

// Rule LibraryItem
ruleLibraryItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryItemAccess().getAlternatives()); }
(rule__LibraryItem__Alternatives)
{ after(grammarAccess.getLibraryItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDef
entryRuleTypeDef 
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDefAccess().getAlternatives()); }
(rule__TypeDef__Alternatives)
{ after(grammarAccess.getTypeDefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePointerTypeDef
entryRulePointerTypeDef 
:
{ before(grammarAccess.getPointerTypeDefRule()); }
	 rulePointerTypeDef
{ after(grammarAccess.getPointerTypeDefRule()); } 
	 EOF 
;

// Rule PointerTypeDef
rulePointerTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointerTypeDefAccess().getGroup()); }
(rule__PointerTypeDef__Group__0)
{ after(grammarAccess.getPointerTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayTypeDef
entryRuleArrayTypeDef 
:
{ before(grammarAccess.getArrayTypeDefRule()); }
	 ruleArrayTypeDef
{ after(grammarAccess.getArrayTypeDefRule()); } 
	 EOF 
;

// Rule ArrayTypeDef
ruleArrayTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayTypeDefAccess().getGroup()); }
(rule__ArrayTypeDef__Group__0)
{ after(grammarAccess.getArrayTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefTypeDef
entryRuleRefTypeDef 
:
{ before(grammarAccess.getRefTypeDefRule()); }
	 ruleRefTypeDef
{ after(grammarAccess.getRefTypeDefRule()); } 
	 EOF 
;

// Rule RefTypeDef
ruleRefTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefTypeDefAccess().getTypeAssignment()); }
(rule__RefTypeDef__TypeAssignment)
{ after(grammarAccess.getRefTypeDefAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDef
entryRuleDataTypeDef 
:
{ before(grammarAccess.getDataTypeDefRule()); }
	 ruleDataTypeDef
{ after(grammarAccess.getDataTypeDefRule()); } 
	 EOF 
;

// Rule DataTypeDef
ruleDataTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefAccess().getAlternatives()); }
(rule__DataTypeDef__Alternatives)
{ after(grammarAccess.getDataTypeDefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedDataTypeDef
entryRuleFixedDataTypeDef 
:
{ before(grammarAccess.getFixedDataTypeDefRule()); }
	 ruleFixedDataTypeDef
{ after(grammarAccess.getFixedDataTypeDefRule()); } 
	 EOF 
;

// Rule FixedDataTypeDef
ruleFixedDataTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getGroup()); }
(rule__FixedDataTypeDef__Group__0)
{ after(grammarAccess.getFixedDataTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerDataTypeDef
entryRuleIntegerDataTypeDef 
:
{ before(grammarAccess.getIntegerDataTypeDefRule()); }
	 ruleIntegerDataTypeDef
{ after(grammarAccess.getIntegerDataTypeDefRule()); } 
	 EOF 
;

// Rule IntegerDataTypeDef
ruleIntegerDataTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getGroup()); }
(rule__IntegerDataTypeDef__Group__0)
{ after(grammarAccess.getIntegerDataTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructTypeDef
entryRuleStructTypeDef 
:
{ before(grammarAccess.getStructTypeDefRule()); }
	 ruleStructTypeDef
{ after(grammarAccess.getStructTypeDefRule()); } 
	 EOF 
;

// Rule StructTypeDef
ruleStructTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeDefAccess().getGroup()); }
(rule__StructTypeDef__Group__0)
{ after(grammarAccess.getStructTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructTypeDefMember
entryRuleStructTypeDefMember 
:
{ before(grammarAccess.getStructTypeDefMemberRule()); }
	 ruleStructTypeDefMember
{ after(grammarAccess.getStructTypeDefMemberRule()); } 
	 EOF 
;

// Rule StructTypeDefMember
ruleStructTypeDefMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getGroup()); }
(rule__StructTypeDefMember__Group__0)
{ after(grammarAccess.getStructTypeDefMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantVariable
entryRuleConstantVariable 
:
{ before(grammarAccess.getConstantVariableRule()); }
	 ruleConstantVariable
{ after(grammarAccess.getConstantVariableRule()); } 
	 EOF 
;

// Rule ConstantVariable
ruleConstantVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantVariableAccess().getGroup()); }
(rule__ConstantVariable__Group__0)
{ after(grammarAccess.getConstantVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegisterVariable
entryRuleRegisterVariable 
:
{ before(grammarAccess.getRegisterVariableRule()); }
	 ruleRegisterVariable
{ after(grammarAccess.getRegisterVariableRule()); } 
	 EOF 
;

// Rule RegisterVariable
ruleRegisterVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegisterVariableAccess().getGroup()); }
(rule__RegisterVariable__Group__0)
{ after(grammarAccess.getRegisterVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationStep
entryRuleOperationStep 
:
{ before(grammarAccess.getOperationStepRule()); }
	 ruleOperationStep
{ after(grammarAccess.getOperationStepRule()); } 
	 EOF 
;

// Rule OperationStep
ruleOperationStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationStepAccess().getAlternatives()); }
(rule__OperationStep__Alternatives)
{ after(grammarAccess.getOperationStepAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getGroup()); }
(rule__Label__Group__0)
{ after(grammarAccess.getLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstructionWord
entryRuleInstructionWord 
:
{ before(grammarAccess.getInstructionWordRule()); }
	 ruleInstructionWord
{ after(grammarAccess.getInstructionWordRule()); } 
	 EOF 
;

// Rule InstructionWord
ruleInstructionWord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionWordAccess().getGroup()); }
(rule__InstructionWord__Group__0)
{ after(grammarAccess.getInstructionWordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWordSection
entryRuleWordSection 
:
{ before(grammarAccess.getWordSectionRule()); }
	 ruleWordSection
{ after(grammarAccess.getWordSectionRule()); } 
	 EOF 
;

// Rule WordSection
ruleWordSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWordSectionAccess().getGroup()); }
(rule__WordSection__Group__0)
{ after(grammarAccess.getWordSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralValue
entryRuleLiteralValue 
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralValueAccess().getValueAssignment()); }
(rule__LiteralValue__ValueAssignment)
{ after(grammarAccess.getLiteralValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarAssignment()); }
(rule__VariableReference__VarAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getVarAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCall
entryRuleOperationCall 
:
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationCallAccess().getGroup()); }
(rule__OperationCall__Group__0)
{ after(grammarAccess.getOperationCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCallParameter
entryRuleOperationCallParameter 
:
{ before(grammarAccess.getOperationCallParameterRule()); }
	 ruleOperationCallParameter
{ after(grammarAccess.getOperationCallParameterRule()); } 
	 EOF 
;

// Rule OperationCallParameter
ruleOperationCallParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationCallParameterAccess().getXExpressionParserRuleCall()); }
	ruleXExpression
{ after(grammarAccess.getOperationCallParameterAccess().getXExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationBlock
entryRuleOperationBlock 
:
{ before(grammarAccess.getOperationBlockRule()); }
	 ruleOperationBlock
{ after(grammarAccess.getOperationBlockRule()); } 
	 EOF 
;

// Rule OperationBlock
ruleOperationBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationBlockAccess().getGroup()); }
(rule__OperationBlock__Group__0)
{ after(grammarAccess.getOperationBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterVariable
entryRuleParameterVariable 
:
{ before(grammarAccess.getParameterVariableRule()); }
	 ruleParameterVariable
{ after(grammarAccess.getParameterVariableRule()); } 
	 EOF 
;

// Rule ParameterVariable
ruleParameterVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterVariableAccess().getGroup()); }
(rule__ParameterVariable__Group__0)
{ after(grammarAccess.getParameterVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorDefinition
entryRuleOperatorDefinition 
:
{ before(grammarAccess.getOperatorDefinitionRule()); }
	 ruleOperatorDefinition
{ after(grammarAccess.getOperatorDefinitionRule()); } 
	 EOF 
;

// Rule OperatorDefinition
ruleOperatorDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getGroup()); }
(rule__OperatorDefinition__Group__0)
{ after(grammarAccess.getOperatorDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkedBinary
entryRuleLinkedBinary 
:
{ before(grammarAccess.getLinkedBinaryRule()); }
	 ruleLinkedBinary
{ after(grammarAccess.getLinkedBinaryRule()); } 
	 EOF 
;

// Rule LinkedBinary
ruleLinkedBinary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkedBinaryAccess().getGroup()); }
(rule__LinkedBinary__Group__0)
{ after(grammarAccess.getLinkedBinaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinarySection
entryRuleBinarySection 
:
{ before(grammarAccess.getBinarySectionRule()); }
	 ruleBinarySection
{ after(grammarAccess.getBinarySectionRule()); } 
	 EOF 
;

// Rule BinarySection
ruleBinarySection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinarySectionAccess().getGroup()); }
(rule__BinarySection__Group__0)
{ after(grammarAccess.getBinarySectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionBinarySection
entryRuleFunctionBinarySection 
:
{ before(grammarAccess.getFunctionBinarySectionRule()); }
	 ruleFunctionBinarySection
{ after(grammarAccess.getFunctionBinarySectionRule()); } 
	 EOF 
;

// Rule FunctionBinarySection
ruleFunctionBinarySection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getGroup()); }
(rule__FunctionBinarySection__Group__0)
{ after(grammarAccess.getFunctionBinarySectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptimizerCall
entryRuleOptimizerCall 
:
{ before(grammarAccess.getOptimizerCallRule()); }
	 ruleOptimizerCall
{ after(grammarAccess.getOptimizerCallRule()); } 
	 EOF 
;

// Rule OptimizerCall
ruleOptimizerCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptimizerCallAccess().getGroup()); }
(rule__OptimizerCall__Group__0)
{ after(grammarAccess.getOptimizerCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionMemory
entryRuleFunctionMemory 
:
{ before(grammarAccess.getFunctionMemoryRule()); }
	 ruleFunctionMemory
{ after(grammarAccess.getFunctionMemoryRule()); } 
	 EOF 
;

// Rule FunctionMemory
ruleFunctionMemory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionMemoryAccess().getGroup()); }
(rule__FunctionMemory__Group__0)
{ after(grammarAccess.getFunctionMemoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantBinarySection
entryRuleConstantBinarySection 
:
{ before(grammarAccess.getConstantBinarySectionRule()); }
	 ruleConstantBinarySection
{ after(grammarAccess.getConstantBinarySectionRule()); } 
	 EOF 
;

// Rule ConstantBinarySection
ruleConstantBinarySection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantBinarySectionAccess().getGroup()); }
(rule__ConstantBinarySection__Group__0)
{ after(grammarAccess.getConstantBinarySectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceBinarySection
entryRuleReferenceBinarySection 
:
{ before(grammarAccess.getReferenceBinarySectionRule()); }
	 ruleReferenceBinarySection
{ after(grammarAccess.getReferenceBinarySectionRule()); } 
	 EOF 
;

// Rule ReferenceBinarySection
ruleReferenceBinarySection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceBinarySectionAccess().getGroup()); }
(rule__ReferenceBinarySection__Group__0)
{ after(grammarAccess.getReferenceBinarySectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression
entryRuleXExpression 
:
{ before(grammarAccess.getXExpressionRule()); }
	 ruleXExpression
{ after(grammarAccess.getXExpressionRule()); } 
	 EOF 
;

// Rule XExpression
ruleXExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionAccess().getGroup()); }
(rule__XExpression__Group__0)
{ after(grammarAccess.getXExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression 
:
{ before(grammarAccess.getXPrimaryExpressionRule()); }
	 ruleXPrimaryExpression
{ after(grammarAccess.getXPrimaryExpressionRule()); } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
(rule__XPrimaryExpression__Alternatives)
{ after(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSizeOfExpression
entryRuleXSizeOfExpression 
:
{ before(grammarAccess.getXSizeOfExpressionRule()); }
	 ruleXSizeOfExpression
{ after(grammarAccess.getXSizeOfExpressionRule()); } 
	 EOF 
;

// Rule XSizeOfExpression
ruleXSizeOfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getGroup()); }
(rule__XSizeOfExpression__Group__0)
{ after(grammarAccess.getXSizeOfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXStructExpression
entryRuleXStructExpression 
:
{ before(grammarAccess.getXStructExpressionRule()); }
	 ruleXStructExpression
{ after(grammarAccess.getXStructExpressionRule()); } 
	 EOF 
;

// Rule XStructExpression
ruleXStructExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXStructExpressionAccess().getGroup()); }
(rule__XStructExpression__Group__0)
{ after(grammarAccess.getXStructExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression1
entryRuleXExpression1 
:
{ before(grammarAccess.getXExpression1Rule()); }
	 ruleXExpression1
{ after(grammarAccess.getXExpression1Rule()); } 
	 EOF 
;

// Rule XExpression1
ruleXExpression1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression1Access().getGroup()); }
(rule__XExpression1__Group__0)
{ after(grammarAccess.getXExpression1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression0
entryRuleXExpression0 
:
{ before(grammarAccess.getXExpression0Rule()); }
	 ruleXExpression0
{ after(grammarAccess.getXExpression0Rule()); } 
	 EOF 
;

// Rule XExpression0
ruleXExpression0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression0Access().getGroup()); }
(rule__XExpression0__Group__0)
{ after(grammarAccess.getXExpression0Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionM1
entryRuleXExpressionM1 
:
{ before(grammarAccess.getXExpressionM1Rule()); }
	 ruleXExpressionM1
{ after(grammarAccess.getXExpressionM1Rule()); } 
	 EOF 
;

// Rule XExpressionM1
ruleXExpressionM1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionM1Access().getGroup()); }
(rule__XExpressionM1__Group__0)
{ after(grammarAccess.getXExpressionM1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression2
entryRuleXExpression2 
:
{ before(grammarAccess.getXExpression2Rule()); }
	 ruleXExpression2
{ after(grammarAccess.getXExpression2Rule()); } 
	 EOF 
;

// Rule XExpression2
ruleXExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression2Access().getGroup()); }
(rule__XExpression2__Group__0)
{ after(grammarAccess.getXExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression3
entryRuleXExpression3 
:
{ before(grammarAccess.getXExpression3Rule()); }
	 ruleXExpression3
{ after(grammarAccess.getXExpression3Rule()); } 
	 EOF 
;

// Rule XExpression3
ruleXExpression3
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression3Access().getGroup()); }
(rule__XExpression3__Group__0)
{ after(grammarAccess.getXExpression3Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression4
entryRuleXExpression4 
:
{ before(grammarAccess.getXExpression4Rule()); }
	 ruleXExpression4
{ after(grammarAccess.getXExpression4Rule()); } 
	 EOF 
;

// Rule XExpression4
ruleXExpression4
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression4Access().getGroup()); }
(rule__XExpression4__Group__0)
{ after(grammarAccess.getXExpression4Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression5
entryRuleXExpression5 
:
{ before(grammarAccess.getXExpression5Rule()); }
	 ruleXExpression5
{ after(grammarAccess.getXExpression5Rule()); } 
	 EOF 
;

// Rule XExpression5
ruleXExpression5
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression5Access().getGroup()); }
(rule__XExpression5__Group__0)
{ after(grammarAccess.getXExpression5Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression6
entryRuleXExpression6 
:
{ before(grammarAccess.getXExpression6Rule()); }
	 ruleXExpression6
{ after(grammarAccess.getXExpression6Rule()); } 
	 EOF 
;

// Rule XExpression6
ruleXExpression6
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression6Access().getGroup()); }
(rule__XExpression6__Group__0)
{ after(grammarAccess.getXExpression6Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionLiteral
entryRuleXExpressionLiteral 
:
{ before(grammarAccess.getXExpressionLiteralRule()); }
	 ruleXExpressionLiteral
{ after(grammarAccess.getXExpressionLiteralRule()); } 
	 EOF 
;

// Rule XExpressionLiteral
ruleXExpressionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionLiteralAccess().getValueAssignment()); }
(rule__XExpressionLiteral__ValueAssignment)
{ after(grammarAccess.getXExpressionLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTopLevelExpression
entryRuleXTopLevelExpression 
:
{ before(grammarAccess.getXTopLevelExpressionRule()); }
	 ruleXTopLevelExpression
{ after(grammarAccess.getXTopLevelExpressionRule()); } 
	 EOF 
;

// Rule XTopLevelExpression
ruleXTopLevelExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getAlternatives()); }
(rule__XTopLevelExpression__Alternatives)
{ after(grammarAccess.getXTopLevelExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign 
:
{ before(grammarAccess.getOpSingleAssignRule()); }
	 ruleOpSingleAssign
{ after(grammarAccess.getOpSingleAssignRule()); } 
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }

	'=' 

{ after(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIsLiteralExpression
entryRuleXIsLiteralExpression 
:
{ before(grammarAccess.getXIsLiteralExpressionRule()); }
	 ruleXIsLiteralExpression
{ after(grammarAccess.getXIsLiteralExpressionRule()); } 
	 EOF 
;

// Rule XIsLiteralExpression
ruleXIsLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getGroup()); }
(rule__XIsLiteralExpression__Group__0)
{ after(grammarAccess.getXIsLiteralExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIfExpression
entryRuleXIfExpression 
:
{ before(grammarAccess.getXIfExpressionRule()); }
	 ruleXIfExpression
{ after(grammarAccess.getXIfExpressionRule()); } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup()); }
(rule__XIfExpression__Group__0)
{ after(grammarAccess.getXIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression 
:
{ before(grammarAccess.getXWhileExpressionRule()); }
	 ruleXWhileExpression
{ after(grammarAccess.getXWhileExpressionRule()); } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXWhileExpressionAccess().getGroup()); }
(rule__XWhileExpression__Group__0)
{ after(grammarAccess.getXWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression 
:
{ before(grammarAccess.getXParenthesizedExpressionRule()); }
	 ruleXParenthesizedExpression
{ after(grammarAccess.getXParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
(rule__XParenthesizedExpression__Group__0)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule IntegerKind
ruleIntegerKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerKindAccess().getAlternatives()); }
(rule__IntegerKind__Alternatives)
{ after(grammarAccess.getIntegerKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ParameterKind
ruleParameterKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterKindAccess().getAlternatives()); }
(rule__ParameterKind__Alternatives)
{ after(grammarAccess.getParameterKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OperationRole
ruleOperationRole
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationRoleAccess().getAlternatives()); }
(rule__OperationRole__Alternatives)
{ after(grammarAccess.getOperationRoleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BinaryType
ruleBinaryType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getAlternatives()); }
(rule__BinaryType__Alternatives)
{ after(grammarAccess.getBinaryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UNARY_OPERATOR
ruleUNARY_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNARY_OPERATORAccess().getAlternatives()); }
(rule__UNARY_OPERATOR__Alternatives)
{ after(grammarAccess.getUNARY_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MULTIPLICATIVE_OPERATOR
ruleMULTIPLICATIVE_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getAlternatives()); }
(rule__MULTIPLICATIVE_OPERATOR__Alternatives)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ADDITIVE_OPERATOR
ruleADDITIVE_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADDITIVE_OPERATORAccess().getAlternatives()); }
(rule__ADDITIVE_OPERATOR__Alternatives)
{ after(grammarAccess.getADDITIVE_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EQUALITY_OPERATOR
ruleEQUALITY_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getAlternatives()); }
(rule__EQUALITY_OPERATOR__Alternatives)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BOOLEAN_OPERATOR
ruleBOOLEAN_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getAlternatives()); }
(rule__BOOLEAN_OPERATOR__Alternatives)
{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__CompilationUnit__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilationUnitAccess().getLibraryParserRuleCall_0()); }
	ruleLibrary
{ after(grammarAccess.getCompilationUnitAccess().getLibraryParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCompilationUnitAccess().getLinkedBinaryParserRuleCall_1()); }
	ruleLinkedBinary
{ after(grammarAccess.getCompilationUnitAccess().getLinkedBinaryParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLITERALAccess().getHEXINTTerminalRuleCall_1()); }
	RULE_HEXINT
{ after(grammarAccess.getLITERALAccess().getHEXINTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLITERALAccess().getBINARYTerminalRuleCall_2()); }
	RULE_BINARY
{ after(grammarAccess.getLITERALAccess().getBINARYTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLITERALAccess().getREALTerminalRuleCall_3()); }
	RULE_REAL
{ after(grammarAccess.getLITERALAccess().getREALTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getLibraryItemAccess().getTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getOperationParserRuleCall_1()); }
	ruleOperation
{ after(grammarAccess.getLibraryItemAccess().getOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_2()); }
(rule__LibraryItem__Group_2__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_3()); }
(rule__LibraryItem__Group_3__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_4()); }
(rule__LibraryItem__Group_4__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getOperatorDefinitionParserRuleCall_5()); }
	ruleOperatorDefinition
{ after(grammarAccess.getLibraryItemAccess().getOperatorDefinitionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_6()); }
(rule__LibraryItem__Group_6__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefAccess().getDataTypeDefParserRuleCall_0()); }
	ruleDataTypeDef
{ after(grammarAccess.getTypeDefAccess().getDataTypeDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getStructTypeDefParserRuleCall_1()); }
	ruleStructTypeDef
{ after(grammarAccess.getTypeDefAccess().getStructTypeDefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getPointerTypeDefParserRuleCall_2()); }
	rulePointerTypeDef
{ after(grammarAccess.getTypeDefAccess().getPointerTypeDefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getArrayTypeDefParserRuleCall_3()); }
	ruleArrayTypeDef
{ after(grammarAccess.getTypeDefAccess().getArrayTypeDefParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getRefTypeDefParserRuleCall_4()); }
	ruleRefTypeDef
{ after(grammarAccess.getTypeDefAccess().getRefTypeDefParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefAccess().getIntegerDataTypeDefParserRuleCall_0()); }
	ruleIntegerDataTypeDef
{ after(grammarAccess.getDataTypeDefAccess().getIntegerDataTypeDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeDefAccess().getFixedDataTypeDefParserRuleCall_1()); }
	ruleFixedDataTypeDef
{ after(grammarAccess.getDataTypeDefAccess().getFixedDataTypeDefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationStep__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationStepAccess().getInstructionWordParserRuleCall_0()); }
	ruleInstructionWord
{ after(grammarAccess.getOperationStepAccess().getInstructionWordParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationStepAccess().getLabelParserRuleCall_1()); }
	ruleLabel
{ after(grammarAccess.getOperationStepAccess().getLabelParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOperationStepAccess().getGroup_2()); }
(rule__OperationStep__Group_2__0)
{ after(grammarAccess.getOperationStepAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOperationStepAccess().getXTopLevelExpressionParserRuleCall_3()); }
	ruleXTopLevelExpression
{ after(grammarAccess.getOperationStepAccess().getXTopLevelExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getLiteralValueParserRuleCall_0_0()); }
	ruleLiteralValue
{ after(grammarAccess.getWordSectionAccess().getLiteralValueParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getWordSectionAccess().getVariableReferenceParserRuleCall_0_1()); }
	ruleVariableReference
{ after(grammarAccess.getWordSectionAccess().getVariableReferenceParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnAssignment_8_1_0()); }
(rule__Operation__ReturnAssignment_8_1_0)
{ after(grammarAccess.getOperationAccess().getReturnAssignment_8_1_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getReturnvarAssignment_8_1_1()); }
(rule__Operation__ReturnvarAssignment_8_1_1)
{ after(grammarAccess.getOperationAccess().getReturnvarAssignment_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySection__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinarySectionAccess().getFunctionBinarySectionParserRuleCall_0_0()); }
	ruleFunctionBinarySection
{ after(grammarAccess.getBinarySectionAccess().getFunctionBinarySectionParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getBinarySectionAccess().getConstantBinarySectionParserRuleCall_0_1()); }
	ruleConstantBinarySection
{ after(grammarAccess.getBinarySectionAccess().getConstantBinarySectionParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getBinarySectionAccess().getReferenceBinarySectionParserRuleCall_0_2()); }
	ruleReferenceBinarySection
{ after(grammarAccess.getBinarySectionAccess().getReferenceBinarySectionParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXExpressionLiteralParserRuleCall_0()); }
	ruleXExpressionLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXExpressionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_1()); }
	ruleXParenthesizedExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIsLiteralExpressionParserRuleCall_2()); }
	ruleXIsLiteralExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIsLiteralExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getVariableReferenceParserRuleCall_3()); }
	ruleVariableReference
{ after(grammarAccess.getXPrimaryExpressionAccess().getVariableReferenceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getOperationCallParserRuleCall_4()); }
	ruleOperationCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getOperationCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXStructExpressionParserRuleCall_5()); }
	ruleXStructExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXStructExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSizeOfExpressionParserRuleCall_6()); }
	ruleXSizeOfExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSizeOfExpressionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getGroup_0()); }
(rule__XTopLevelExpression__Group_0__0)
{ after(grammarAccess.getXTopLevelExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXTopLevelExpressionAccess().getGroup_1()); }
(rule__XTopLevelExpression__Group_1__0)
{ after(grammarAccess.getXTopLevelExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getXTopLevelExpressionAccess().getXIfExpressionParserRuleCall_2()); }
	ruleXIfExpression
{ after(grammarAccess.getXTopLevelExpressionAccess().getXIfExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXTopLevelExpressionAccess().getXWhileExpressionParserRuleCall_3()); }
	ruleXWhileExpression
{ after(grammarAccess.getXTopLevelExpressionAccess().getXWhileExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerKindAccess().getUNSIGNEDEnumLiteralDeclaration_0()); }
(	'unsigned' 
)
{ after(grammarAccess.getIntegerKindAccess().getUNSIGNEDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getIntegerKindAccess().getSIGNEDEnumLiteralDeclaration_1()); }
(	'signed' 
)
{ after(grammarAccess.getIntegerKindAccess().getSIGNEDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterKindAccess().getANYEnumLiteralDeclaration_0()); }
(	'default' 
)
{ after(grammarAccess.getParameterKindAccess().getANYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getParameterKindAccess().getVAREnumLiteralDeclaration_1()); }
(	'var' 
)
{ after(grammarAccess.getParameterKindAccess().getVAREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getParameterKindAccess().getCONSTEnumLiteralDeclaration_2()); }
(	'const' 
)
{ after(grammarAccess.getParameterKindAccess().getCONSTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationRole__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationRoleAccess().getSETEnumLiteralDeclaration_0()); }
(	'SET' 
)
{ after(grammarAccess.getOperationRoleAccess().getSETEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getADDEnumLiteralDeclaration_1()); }
(	'ADD' 
)
{ after(grammarAccess.getOperationRoleAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getSUBTRACTEnumLiteralDeclaration_2()); }
(	'SUBTRACT' 
)
{ after(grammarAccess.getOperationRoleAccess().getSUBTRACTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getANDEnumLiteralDeclaration_3()); }
(	'AND' 
)
{ after(grammarAccess.getOperationRoleAccess().getANDEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getOREnumLiteralDeclaration_4()); }
(	'OR' 
)
{ after(grammarAccess.getOperationRoleAccess().getOREnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getXOREnumLiteralDeclaration_5()); }
(	'XOR' 
)
{ after(grammarAccess.getOperationRoleAccess().getXOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getEQUALSEnumLiteralDeclaration_6()); }
(	'EQUALS' 
)
{ after(grammarAccess.getOperationRoleAccess().getEQUALSEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getBRANCHEnumLiteralDeclaration_7()); }
(	'BRANCH' 
)
{ after(grammarAccess.getOperationRoleAccess().getBRANCHEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getUC_GOTOEnumLiteralDeclaration_8()); }
(	'UC_GOTO' 
)
{ after(grammarAccess.getOperationRoleAccess().getUC_GOTOEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getNOTEnumLiteralDeclaration_9()); }
(	'NOT' 
)
{ after(grammarAccess.getOperationRoleAccess().getNOTEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getINDIRECTIONEnumLiteralDeclaration_10()); }
(	'INDIRECTION' 
)
{ after(grammarAccess.getOperationRoleAccess().getINDIRECTIONEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getCLEAREnumLiteralDeclaration_11()); }
(	'CLEAR' 
)
{ after(grammarAccess.getOperationRoleAccess().getCLEAREnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getINCREMENTEnumLiteralDeclaration_12()); }
(	'INCREMENT' 
)
{ after(grammarAccess.getOperationRoleAccess().getINCREMENTEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getDECREMENTEnumLiteralDeclaration_13()); }
(	'DECREMENT' 
)
{ after(grammarAccess.getOperationRoleAccess().getDECREMENTEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getDIVEnumLiteralDeclaration_14()); }
(	'DIV' 
)
{ after(grammarAccess.getOperationRoleAccess().getDIVEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getMODEnumLiteralDeclaration_15()); }
(	'MOD' 
)
{ after(grammarAccess.getOperationRoleAccess().getMODEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getLTEnumLiteralDeclaration_16()); }
(	'LT' 
)
{ after(grammarAccess.getOperationRoleAccess().getLTEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getLTEEnumLiteralDeclaration_17()); }
(	'LTE' 
)
{ after(grammarAccess.getOperationRoleAccess().getLTEEnumLiteralDeclaration_17()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getGTEnumLiteralDeclaration_18()); }
(	'GT' 
)
{ after(grammarAccess.getOperationRoleAccess().getGTEnumLiteralDeclaration_18()); }
)

    |(
{ before(grammarAccess.getOperationRoleAccess().getGTEEnumLiteralDeclaration_19()); }
(	'GTE' 
)
{ after(grammarAccess.getOperationRoleAccess().getGTEEnumLiteralDeclaration_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getDEFAULTEnumLiteralDeclaration_0()); }
(	'default' 
)
{ after(grammarAccess.getBinaryTypeAccess().getDEFAULTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryTypeAccess().getINTELHEXFILEEnumLiteralDeclaration_1()); }
(	'intelHexfile' 
)
{ after(grammarAccess.getBinaryTypeAccess().getINTELHEXFILEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryTypeAccess().getSRECHEXFILEEnumLiteralDeclaration_2()); }
(	'SRECHexfile' 
)
{ after(grammarAccess.getBinaryTypeAccess().getSRECHEXFILEEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNARY_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNARY_OPERATORAccess().getMINUSEnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getMINUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUNARY_OPERATORAccess().getNOTEnumLiteralDeclaration_1()); }
(	'!' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getNOTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getUNARY_OPERATORAccess().getREFERENCEEnumLiteralDeclaration_2()); }
(	'&' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getREFERENCEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getUNARY_OPERATORAccess().getDEREFERENCEEnumLiteralDeclaration_3()); }
(	'@' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getDEREFERENCEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MULTIPLICATIVE_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMULEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMULEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getDIVEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getDIVEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMODEnumLiteralDeclaration_2()); }
(	'%' 
)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMODEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADDITIVE_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADDITIVE_OPERATORAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getADDITIVE_OPERATORAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getADDITIVE_OPERATORAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getADDITIVE_OPERATORAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EQUALITY_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getEQUALSEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getEQUALSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getNOTEQUALSEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getNOTEQUALSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getGTEEnumLiteralDeclaration_2()); }
(	'>=' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getGTEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getLTEEnumLiteralDeclaration_3()); }
(	'<=' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getLTEEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getGTEnumLiteralDeclaration_4()); }
(	'>' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getGTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getLTEnumLiteralDeclaration_5()); }
(	'<' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getLTEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getOREnumLiteralDeclaration_0()); }
(	'||' 
)
{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getOREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getANDEnumLiteralDeclaration_1()); }
(	'&&' 
)
{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getANDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDefinition__Group__0__Impl
	rule__AnnotationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getAnnotationKeyword_0()); }

	'annotation' 

{ after(grammarAccess.getAnnotationDefinitionAccess().getAnnotationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getNameAssignment_1()); }
(rule__AnnotationDefinition__NameAssignment_1)
{ after(grammarAccess.getAnnotationDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getAnnotationAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getDefinitionAssignment_1()); }
(rule__Annotation__DefinitionAssignment_1)
{ after(grammarAccess.getAnnotationAccess().getDefinitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Library__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__0__Impl
	rule__Library__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }

	'library' 

{ after(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__1__Impl
	rule__Library__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
(rule__Library__NameAssignment_1)
{ after(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__2__Impl
	rule__Library__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getGroup_2()); }
(rule__Library__Group_2__0)?
{ after(grammarAccess.getLibraryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__3__Impl
	rule__Library__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLibraryAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__4__Impl
	rule__Library__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getGroup_4()); }
(rule__Library__Group_4__0)*
{ after(grammarAccess.getLibraryAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getItemsAssignment_5()); }
(rule__Library__ItemsAssignment_5)*
{ after(grammarAccess.getLibraryAccess().getItemsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Library__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_2__0__Impl
	rule__Library__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getOverridesKeyword_2_0()); }

	'overrides' 

{ after(grammarAccess.getLibraryAccess().getOverridesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_2__1__Impl
	rule__Library__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getOverridesAssignment_2_1()); }
(rule__Library__OverridesAssignment_2_1)
{ after(grammarAccess.getLibraryAccess().getOverridesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getGroup_2_2()); }
(rule__Library__Group_2_2__0)*
{ after(grammarAccess.getLibraryAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Library__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_2_2__0__Impl
	rule__Library__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getLibraryAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getOverridesAssignment_2_2_1()); }
(rule__Library__OverridesAssignment_2_2_1)
{ after(grammarAccess.getLibraryAccess().getOverridesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Library__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_4__0__Impl
	rule__Library__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getUseKeyword_4_0()); }

	'use' 

{ after(grammarAccess.getLibraryAccess().getUseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_4__1__Impl
	rule__Library__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getUseAssignment_4_1()); }
(rule__Library__UseAssignment_4_1)
{ after(grammarAccess.getLibraryAccess().getUseAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getSemicolonKeyword_4_2()); }

	';' 

{ after(grammarAccess.getLibraryAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LibraryItem__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_2__0__Impl
	rule__LibraryItem__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getVariableParserRuleCall_2_0()); }
	ruleVariable
{ after(grammarAccess.getLibraryItemAccess().getVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LibraryItem__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_3__0__Impl
	rule__LibraryItem__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getConstantVariableParserRuleCall_3_0()); }
	ruleConstantVariable
{ after(grammarAccess.getLibraryItemAccess().getConstantVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LibraryItem__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_4__0__Impl
	rule__LibraryItem__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getRegisterVariableParserRuleCall_4_0()); }
	ruleRegisterVariable
{ after(grammarAccess.getLibraryItemAccess().getRegisterVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LibraryItem__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_6__0__Impl
	rule__LibraryItem__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getAnnotationDefinitionParserRuleCall_6_0()); }
	ruleAnnotationDefinition
{ after(grammarAccess.getLibraryItemAccess().getAnnotationDefinitionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_6_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
(rule__Type__NameAssignment_1)
{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__3__Impl
	rule__Type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefAssignment_3()); }
(rule__Type__DefAssignment_3)
{ after(grammarAccess.getTypeAccess().getDefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTypeAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PointerTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointerTypeDef__Group__0__Impl
	rule__PointerTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getPointerKeyword_0()); }

	'pointer' 

{ after(grammarAccess.getPointerTypeDefAccess().getPointerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointerTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointerTypeDef__Group__1__Impl
	rule__PointerTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getOfKeyword_1()); }

	'of' 

{ after(grammarAccess.getPointerTypeDefAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointerTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointerTypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getDefAssignment_2()); }
(rule__PointerTypeDef__DefAssignment_2)
{ after(grammarAccess.getPointerTypeDefAccess().getDefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArrayTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__0__Impl
	rule__ArrayTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getArrayKeyword_0()); }

	'array' 

{ after(grammarAccess.getArrayTypeDefAccess().getArrayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__1__Impl
	rule__ArrayTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayTypeDefAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__2__Impl
	rule__ArrayTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getSizeAssignment_2()); }
(rule__ArrayTypeDef__SizeAssignment_2)
{ after(grammarAccess.getArrayTypeDefAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__3__Impl
	rule__ArrayTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayTypeDefAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__4__Impl
	rule__ArrayTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getOfKeyword_4()); }

	'of' 

{ after(grammarAccess.getArrayTypeDefAccess().getOfKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getDefAssignment_5()); }
(rule__ArrayTypeDef__DefAssignment_5)
{ after(grammarAccess.getArrayTypeDefAccess().getDefAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FixedDataTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__0__Impl
	rule__FixedDataTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getFixedKeyword_0()); }

	'fixed' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getFixedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__1__Impl
	rule__FixedDataTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getBitsAssignment_1()); }
(rule__FixedDataTypeDef__BitsAssignment_1)
{ after(grammarAccess.getFixedDataTypeDefAccess().getBitsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__2__Impl
	rule__FixedDataTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getBitsKeyword_2()); }

	'bits' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getBitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__3__Impl
	rule__FixedDataTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getScaleKeyword_3()); }

	'scale' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getScaleKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__4__Impl
	rule__FixedDataTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getScaleAssignment_5()); }
(rule__FixedDataTypeDef__ScaleAssignment_5)
{ after(grammarAccess.getFixedDataTypeDefAccess().getScaleAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntegerDataTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataTypeDef__Group__0__Impl
	rule__IntegerDataTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getKindAssignment_0()); }
(rule__IntegerDataTypeDef__KindAssignment_0)
{ after(grammarAccess.getIntegerDataTypeDefAccess().getKindAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDataTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataTypeDef__Group__1__Impl
	rule__IntegerDataTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getBitsAssignment_1()); }
(rule__IntegerDataTypeDef__BitsAssignment_1)
{ after(grammarAccess.getIntegerDataTypeDefAccess().getBitsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDataTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataTypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getBitsKeyword_2()); }

	'bits' 

{ after(grammarAccess.getIntegerDataTypeDefAccess().getBitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__0__Impl
	rule__StructTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getStructTypeDefAction_0()); }
(

)
{ after(grammarAccess.getStructTypeDefAccess().getStructTypeDefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__1__Impl
	rule__StructTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getStructKeyword_1()); }

	'struct' 

{ after(grammarAccess.getStructTypeDefAccess().getStructKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__2__Impl
	rule__StructTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStructTypeDefAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__3__Impl
	rule__StructTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersAssignment_3()); }
(rule__StructTypeDef__MembersAssignment_3)
{ after(grammarAccess.getStructTypeDefAccess().getMembersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__4__Impl
	rule__StructTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getGroup_4()); }
(rule__StructTypeDef__Group_4__0)*
{ after(grammarAccess.getStructTypeDefAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStructTypeDefAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StructTypeDef__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group_4__0__Impl
	rule__StructTypeDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getStructTypeDefAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersAssignment_4_1()); }
(rule__StructTypeDef__MembersAssignment_4_1)
{ after(grammarAccess.getStructTypeDefAccess().getMembersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructTypeDefMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDefMember__Group__0__Impl
	rule__StructTypeDefMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getStructTypeDefMemberAction_0()); }
(

)
{ after(grammarAccess.getStructTypeDefMemberAccess().getStructTypeDefMemberAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDefMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDefMember__Group__1__Impl
	rule__StructTypeDefMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getTypeAssignment_1()); }
(rule__StructTypeDefMember__TypeAssignment_1)
{ after(grammarAccess.getStructTypeDefMemberAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDefMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDefMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getNameAssignment_2()); }
(rule__StructTypeDefMember__NameAssignment_2)
{ after(grammarAccess.getStructTypeDefMemberAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__0__Impl
	rule__ConstantVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getConstantVariableAction_0()); }
(

)
{ after(grammarAccess.getConstantVariableAccess().getConstantVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__1__Impl
	rule__ConstantVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getConstKeyword_1()); }

	'const' 

{ after(grammarAccess.getConstantVariableAccess().getConstKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__2__Impl
	rule__ConstantVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getTypeAssignment_2()); }
(rule__ConstantVariable__TypeAssignment_2)
{ after(grammarAccess.getConstantVariableAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__3__Impl
	rule__ConstantVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getNameAssignment_3()); }
(rule__ConstantVariable__NameAssignment_3)
{ after(grammarAccess.getConstantVariableAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__4__Impl
	rule__ConstantVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getConstantVariableAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getValueAssignment_5()); }
(rule__ConstantVariable__ValueAssignment_5)
{ after(grammarAccess.getConstantVariableAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RegisterVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__0__Impl
	rule__RegisterVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getRegisterVariableAction_0()); }
(

)
{ after(grammarAccess.getRegisterVariableAccess().getRegisterVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__1__Impl
	rule__RegisterVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getRegKeyword_1()); }

	'reg' 

{ after(grammarAccess.getRegisterVariableAccess().getRegKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__2__Impl
	rule__RegisterVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getTypeAssignment_2()); }
(rule__RegisterVariable__TypeAssignment_2)
{ after(grammarAccess.getRegisterVariableAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__3__Impl
	rule__RegisterVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getNameAssignment_3()); }
(rule__RegisterVariable__NameAssignment_3)
{ after(grammarAccess.getRegisterVariableAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__4__Impl
	rule__RegisterVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getRegisterVariableAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getAddrAssignment_5()); }
(rule__RegisterVariable__AddrAssignment_5)
{ after(grammarAccess.getRegisterVariableAccess().getAddrAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OperationStep__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationStep__Group_2__0__Impl
	rule__OperationStep__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationStep__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationStepAccess().getVariableParserRuleCall_2_0()); }
	ruleVariable
{ after(grammarAccess.getOperationStepAccess().getVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationStep__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationStep__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationStep__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationStepAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getOperationStepAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Label__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelAction_0()); }
(

)
{ after(grammarAccess.getLabelAccess().getLabelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelKeyword_1()); }

	'label' 

{ after(grammarAccess.getLabelAccess().getLabelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__2__Impl
	rule__Label__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_2()); }
(rule__Label__NameAssignment_2)
{ after(grammarAccess.getLabelAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLabelAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InstructionWord__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstructionWord__Group__0__Impl
	rule__InstructionWord__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWord__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionWordAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getInstructionWordAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionWord__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstructionWord__Group__1__Impl
	rule__InstructionWord__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWord__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInstructionWordAccess().getSectionsAssignment_1()); }
(rule__InstructionWord__SectionsAssignment_1)
{ after(grammarAccess.getInstructionWordAccess().getSectionsAssignment_1()); }
)
(
{ before(grammarAccess.getInstructionWordAccess().getSectionsAssignment_1()); }
(rule__InstructionWord__SectionsAssignment_1)*
{ after(grammarAccess.getInstructionWordAccess().getSectionsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstructionWord__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstructionWord__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWord__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionWordAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getInstructionWordAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WordSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordSection__Group__0__Impl
	rule__WordSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getAlternatives_0()); }
(rule__WordSection__Alternatives_0)
{ after(grammarAccess.getWordSectionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordSection__Group__1__Impl
	rule__WordSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getWordSectionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordSection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordSection__Group__2__Impl
	rule__WordSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getSizeAssignment_2()); }
(rule__WordSection__SizeAssignment_2)
{ after(grammarAccess.getWordSectionAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordSection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordSection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getGroup_3()); }
(rule__WordSection__Group_3__0)?
{ after(grammarAccess.getWordSectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WordSection__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordSection__Group_3__0__Impl
	rule__WordSection__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getWordSectionAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordSection__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordSection__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getShiftAssignment_3_1()); }
(rule__WordSection__ShiftAssignment_3_1)
{ after(grammarAccess.getWordSectionAccess().getShiftAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
(rule__Variable__TypeAssignment_0)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
(rule__Variable__NameAssignment_1)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__0__Impl
	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getOperationAssignment_0()); }
(rule__OperationCall__OperationAssignment_0)
{ after(grammarAccess.getOperationCallAccess().getOperationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__1__Impl
	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__2__Impl
	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2()); }
(rule__OperationCall__Group_2__0)?
{ after(grammarAccess.getOperationCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2__0__Impl
	rule__OperationCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
(rule__OperationCall__ParamsAssignment_2_0)
{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
(rule__OperationCall__Group_2_1__0)*
{ after(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2_1__0__Impl
	rule__OperationCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
(rule__OperationCall__ParamsAssignment_2_1_1)
{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOperationAction_0()); }
(

)
{ after(grammarAccess.getOperationAccess().getOperationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_1()); }
(rule__Operation__NameAssignment_1)
{ after(grammarAccess.getOperationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3()); }
(rule__Operation__Group_3__0)?
{ after(grammarAccess.getOperationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__6__Impl
	rule__Operation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getBlockAssignment_6()); }
(rule__Operation__BlockAssignment_6)
{ after(grammarAccess.getOperationAccess().getBlockAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__7__Impl
	rule__Operation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_8()); }
(rule__Operation__Group_8__0)?
{ after(grammarAccess.getOperationAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Operation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__0__Impl
	rule__Operation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsAssignment_3_0()); }
(rule__Operation__ParamsAssignment_3_0)
{ after(grammarAccess.getOperationAccess().getParamsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3_1()); }
(rule__Operation__Group_3_1__0)*
{ after(grammarAccess.getOperationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3_1__0__Impl
	rule__Operation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getOperationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsAssignment_3_1_1()); }
(rule__Operation__ParamsAssignment_3_1_1)
{ after(grammarAccess.getOperationAccess().getParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_8__0__Impl
	rule__Operation__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnsKeyword_8_0()); }

	'returns' 

{ after(grammarAccess.getOperationAccess().getReturnsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_8__1__Impl
	rule__Operation__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getAlternatives_8_1()); }
(rule__Operation__Alternatives_8_1)
{ after(grammarAccess.getOperationAccess().getAlternatives_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getSemicolonKeyword_8_2()); }

	';' 

{ after(grammarAccess.getOperationAccess().getSemicolonKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OperationBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationBlock__Group__0__Impl
	rule__OperationBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationBlockAccess().getOperationBlockAction_0()); }
(

)
{ after(grammarAccess.getOperationBlockAccess().getOperationBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationBlockAccess().getStepsAssignment_1()); }
(rule__OperationBlock__StepsAssignment_1)*
{ after(grammarAccess.getOperationBlockAccess().getStepsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__0__Impl
	rule__ParameterVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getParameterVariableAction_0()); }
(

)
{ after(grammarAccess.getParameterVariableAccess().getParameterVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__1__Impl
	rule__ParameterVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getKindAssignment_1()); }
(rule__ParameterVariable__KindAssignment_1)?
{ after(grammarAccess.getParameterVariableAccess().getKindAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__2__Impl
	rule__ParameterVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getTypeAssignment_2()); }
(rule__ParameterVariable__TypeAssignment_2)
{ after(grammarAccess.getParameterVariableAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__3__Impl
	rule__ParameterVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getNameAssignment_3()); }
(rule__ParameterVariable__NameAssignment_3)
{ after(grammarAccess.getParameterVariableAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getGroup_4()); }
(rule__ParameterVariable__Group_4__0)?
{ after(grammarAccess.getParameterVariableAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ParameterVariable__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group_4__0__Impl
	rule__ParameterVariable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getEqualsSignKeyword_4_0()); }

	'=' 

{ after(grammarAccess.getParameterVariableAccess().getEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getDefaultAssignment_4_1()); }
(rule__ParameterVariable__DefaultAssignment_4_1)
{ after(grammarAccess.getParameterVariableAccess().getDefaultAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperatorDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group__0__Impl
	rule__OperatorDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getOperatorKeyword_0()); }

	'operator' 

{ after(grammarAccess.getOperatorDefinitionAccess().getOperatorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group__1__Impl
	rule__OperatorDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getRoleAssignment_1()); }
(rule__OperatorDefinition__RoleAssignment_1)
{ after(grammarAccess.getOperatorDefinitionAccess().getRoleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group__2__Impl
	rule__OperatorDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getOperatorDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group__3__Impl
	rule__OperatorDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCandidateAssignment_3()); }
(rule__OperatorDefinition__CandidateAssignment_3)
{ after(grammarAccess.getOperatorDefinitionAccess().getCandidateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group__4__Impl
	rule__OperatorDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getGroup_4()); }
(rule__OperatorDefinition__Group_4__0)*
{ after(grammarAccess.getOperatorDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group__5__Impl
	rule__OperatorDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCommaKeyword_5()); }
(
	',' 
)?
{ after(grammarAccess.getOperatorDefinitionAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getOperatorDefinitionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__OperatorDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group_4__0__Impl
	rule__OperatorDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getOperatorDefinitionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCandidateAssignment_4_1()); }
(rule__OperatorDefinition__CandidateAssignment_4_1)
{ after(grammarAccess.getOperatorDefinitionAccess().getCandidateAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkedBinary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group__0__Impl
	rule__LinkedBinary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getBinaryKeyword_0()); }

	'binary' 

{ after(grammarAccess.getLinkedBinaryAccess().getBinaryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBinary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group__1__Impl
	rule__LinkedBinary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getNameAssignment_1()); }
(rule__LinkedBinary__NameAssignment_1)
{ after(grammarAccess.getLinkedBinaryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBinary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group__2__Impl
	rule__LinkedBinary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getTypeAssignment_2()); }
(rule__LinkedBinary__TypeAssignment_2)?
{ after(grammarAccess.getLinkedBinaryAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBinary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group__3__Impl
	rule__LinkedBinary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLinkedBinaryAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBinary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group__4__Impl
	rule__LinkedBinary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getGroup_4()); }
(rule__LinkedBinary__Group_4__0)*
{ after(grammarAccess.getLinkedBinaryAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBinary__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getSectionsAssignment_5()); }
(rule__LinkedBinary__SectionsAssignment_5)*
{ after(grammarAccess.getLinkedBinaryAccess().getSectionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LinkedBinary__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group_4__0__Impl
	rule__LinkedBinary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getUseKeyword_4_0()); }

	'use' 

{ after(grammarAccess.getLinkedBinaryAccess().getUseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBinary__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group_4__1__Impl
	rule__LinkedBinary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getUseAssignment_4_1()); }
(rule__LinkedBinary__UseAssignment_4_1)
{ after(grammarAccess.getLinkedBinaryAccess().getUseAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBinary__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBinary__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getSemicolonKeyword_4_2()); }

	';' 

{ after(grammarAccess.getLinkedBinaryAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinarySection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinarySection__Group__0__Impl
	rule__BinarySection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinarySectionAccess().getAlternatives_0()); }
(rule__BinarySection__Alternatives_0)
{ after(grammarAccess.getBinarySectionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinarySection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinarySection__Group__1__Impl
	rule__BinarySection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinarySectionAccess().getAtKeyword_1()); }

	'at' 

{ after(grammarAccess.getBinarySectionAccess().getAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinarySection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinarySection__Group__2__Impl
	rule__BinarySection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinarySectionAccess().getStartAssignment_2()); }
(rule__BinarySection__StartAssignment_2)
{ after(grammarAccess.getBinarySectionAccess().getStartAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinarySection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinarySection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinarySectionAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getBinarySectionAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionBinarySection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__0__Impl
	rule__FunctionBinarySection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getProgramKeyword_0()); }

	'program' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getProgramKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__1__Impl
	rule__FunctionBinarySection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getNameAssignment_1()); }
(rule__FunctionBinarySection__NameAssignment_1)
{ after(grammarAccess.getFunctionBinarySectionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__2__Impl
	rule__FunctionBinarySection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__3__Impl
	rule__FunctionBinarySection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getStartAddrKeyword_3()); }

	'startAddr' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getStartAddrKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__4__Impl
	rule__FunctionBinarySection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__5__Impl
	rule__FunctionBinarySection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getStartAddrAssignment_5()); }
(rule__FunctionBinarySection__StartAddrAssignment_5)
{ after(grammarAccess.getFunctionBinarySectionAccess().getStartAddrAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__6__Impl
	rule__FunctionBinarySection__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__7__Impl
	rule__FunctionBinarySection__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getMemwidthKeyword_7()); }

	'memwidth' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getMemwidthKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__8__Impl
	rule__FunctionBinarySection__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__9__Impl
	rule__FunctionBinarySection__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getMemwidthAssignment_9()); }
(rule__FunctionBinarySection__MemwidthAssignment_9)
{ after(grammarAccess.getFunctionBinarySectionAccess().getMemwidthAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__10__Impl
	rule__FunctionBinarySection__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_10()); }

	';' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__11__Impl
	rule__FunctionBinarySection__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getPointerTypeKeyword_11()); }

	'pointerType' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getPointerTypeKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__12__Impl
	rule__FunctionBinarySection__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_12()); }

	'=' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__13__Impl
	rule__FunctionBinarySection__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getPointerTypeAssignment_13()); }
(rule__FunctionBinarySection__PointerTypeAssignment_13)
{ after(grammarAccess.getFunctionBinarySectionAccess().getPointerTypeAssignment_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__14__Impl
	rule__FunctionBinarySection__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_14()); }

	';' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__15__Impl
	rule__FunctionBinarySection__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getAddressTypeKeyword_15()); }

	'addressType' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getAddressTypeKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__16__Impl
	rule__FunctionBinarySection__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_16()); }

	'=' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getEqualsSignKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__17__Impl
	rule__FunctionBinarySection__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getAddressTypeAssignment_17()); }
(rule__FunctionBinarySection__AddressTypeAssignment_17)
{ after(grammarAccess.getFunctionBinarySectionAccess().getAddressTypeAssignment_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__18__Impl
	rule__FunctionBinarySection__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_18()); }

	';' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__19__Impl
	rule__FunctionBinarySection__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getGroup_19()); }
(rule__FunctionBinarySection__Group_19__0)
{ after(grammarAccess.getFunctionBinarySectionAccess().getGroup_19()); }
)
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getGroup_19()); }
(rule__FunctionBinarySection__Group_19__0)*
{ after(grammarAccess.getFunctionBinarySectionAccess().getGroup_19()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__20__Impl
	rule__FunctionBinarySection__Group__21
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getGroup_20()); }
(rule__FunctionBinarySection__Group_20__0)*
{ after(grammarAccess.getFunctionBinarySectionAccess().getGroup_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__21
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__21__Impl
	rule__FunctionBinarySection__Group__22
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__21__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getRightParenthesisKeyword_21()); }

	')' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getRightParenthesisKeyword_21()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__22
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__22__Impl
	rule__FunctionBinarySection__Group__23
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__22__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLeftCurlyBracketKeyword_22()); }

	'{' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getLeftCurlyBracketKeyword_22()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__23
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__23__Impl
	rule__FunctionBinarySection__Group__24
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__23__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getGroup_23()); }
(rule__FunctionBinarySection__Group_23__0)*
{ after(grammarAccess.getFunctionBinarySectionAccess().getGroup_23()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__24
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__24__Impl
	rule__FunctionBinarySection__Group__25
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__24__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLinkKeyword_24()); }

	'link' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getLinkKeyword_24()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__25
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__25__Impl
	rule__FunctionBinarySection__Group__26
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__25__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLeftCurlyBracketKeyword_25()); }

	'{' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getLeftCurlyBracketKeyword_25()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__26
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__26__Impl
	rule__FunctionBinarySection__Group__27
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__26__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getDoAssignment_26()); }
(rule__FunctionBinarySection__DoAssignment_26)
{ after(grammarAccess.getFunctionBinarySectionAccess().getDoAssignment_26()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__27
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__27__Impl
	rule__FunctionBinarySection__Group__28
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__27__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getRightCurlyBracketKeyword_27()); }

	'}' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getRightCurlyBracketKeyword_27()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group__28
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group__28__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group__28__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getRightCurlyBracketKeyword_28()); }

	'}' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getRightCurlyBracketKeyword_28()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























































rule__FunctionBinarySection__Group_19__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group_19__0__Impl
	rule__FunctionBinarySection__Group_19__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group_19__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getMemsAssignment_19_0()); }
(rule__FunctionBinarySection__MemsAssignment_19_0)
{ after(grammarAccess.getFunctionBinarySectionAccess().getMemsAssignment_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group_19__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group_19__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group_19__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_19_1()); }

	';' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_19_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionBinarySection__Group_20__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group_20__0__Impl
	rule__FunctionBinarySection__Group_20__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group_20__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getOptimizercallsAssignment_20_0()); }
(rule__FunctionBinarySection__OptimizercallsAssignment_20_0)
{ after(grammarAccess.getFunctionBinarySectionAccess().getOptimizercallsAssignment_20_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group_20__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group_20__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group_20__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_20_1()); }

	';' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_20_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionBinarySection__Group_23__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group_23__0__Impl
	rule__FunctionBinarySection__Group_23__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group_23__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLibKeyword_23_0()); }

	'lib' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getLibKeyword_23_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group_23__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group_23__1__Impl
	rule__FunctionBinarySection__Group_23__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group_23__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLibAssignment_23_1()); }
(rule__FunctionBinarySection__LibAssignment_23_1)
{ after(grammarAccess.getFunctionBinarySectionAccess().getLibAssignment_23_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBinarySection__Group_23__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBinarySection__Group_23__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__Group_23__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_23_2()); }

	';' 

{ after(grammarAccess.getFunctionBinarySectionAccess().getSemicolonKeyword_23_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OptimizerCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptimizerCall__Group__0__Impl
	rule__OptimizerCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptimizerCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptimizerCallAccess().getOptimizeKeyword_0()); }

	'optimize' 

{ after(grammarAccess.getOptimizerCallAccess().getOptimizeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptimizerCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptimizerCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptimizerCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptimizerCallAccess().getOptimizerAssignment_1()); }
(rule__OptimizerCall__OptimizerAssignment_1)
{ after(grammarAccess.getOptimizerCallAccess().getOptimizerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionMemory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemory__Group__0__Impl
	rule__FunctionMemory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemoryAccess().getMemKeyword_0()); }

	'mem' 

{ after(grammarAccess.getFunctionMemoryAccess().getMemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemory__Group__1__Impl
	rule__FunctionMemory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemoryAccess().getStartAssignment_1()); }
(rule__FunctionMemory__StartAssignment_1)
{ after(grammarAccess.getFunctionMemoryAccess().getStartAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemory__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemory__Group__2__Impl
	rule__FunctionMemory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemory__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemoryAccess().getFullStopFullStopKeyword_2()); }

	'..' 

{ after(grammarAccess.getFunctionMemoryAccess().getFullStopFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionMemory__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionMemory__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemory__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemoryAccess().getEndAssignment_3()); }
(rule__FunctionMemory__EndAssignment_3)
{ after(grammarAccess.getFunctionMemoryAccess().getEndAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantBinarySection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantBinarySection__Group__0__Impl
	rule__ConstantBinarySection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantBinarySection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantBinarySectionAccess().getDataKeyword_0()); }

	'data' 

{ after(grammarAccess.getConstantBinarySectionAccess().getDataKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantBinarySection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantBinarySection__Group__1__Impl
	rule__ConstantBinarySection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantBinarySection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantBinarySectionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getConstantBinarySectionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantBinarySection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantBinarySection__Group__2__Impl
	rule__ConstantBinarySection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantBinarySection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConstantBinarySectionAccess().getGroup_2()); }
(rule__ConstantBinarySection__Group_2__0)
{ after(grammarAccess.getConstantBinarySectionAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getConstantBinarySectionAccess().getGroup_2()); }
(rule__ConstantBinarySection__Group_2__0)*
{ after(grammarAccess.getConstantBinarySectionAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantBinarySection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantBinarySection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantBinarySection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantBinarySectionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getConstantBinarySectionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantBinarySection__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantBinarySection__Group_2__0__Impl
	rule__ConstantBinarySection__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantBinarySection__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantBinarySectionAccess().getDataAssignment_2_0()); }
(rule__ConstantBinarySection__DataAssignment_2_0)
{ after(grammarAccess.getConstantBinarySectionAccess().getDataAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantBinarySection__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantBinarySection__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantBinarySection__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantBinarySectionAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getConstantBinarySectionAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceBinarySection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceBinarySection__Group__0__Impl
	rule__ReferenceBinarySection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceBinarySection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceBinarySectionAccess().getIncludeKeyword_0()); }

	'include' 

{ after(grammarAccess.getReferenceBinarySectionAccess().getIncludeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceBinarySection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceBinarySection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceBinarySection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceBinarySectionAccess().getIncAssignment_1()); }
(rule__ReferenceBinarySection__IncAssignment_1)
{ after(grammarAccess.getReferenceBinarySectionAccess().getIncAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group__0__Impl
	rule__XExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getXExpression6ParserRuleCall_0()); }
	ruleXExpression6
{ after(grammarAccess.getXExpressionAccess().getXExpression6ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getGroup_1()); }
(rule__XExpression__Group_1__0)?
{ after(grammarAccess.getXExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group_1__0__Impl
	rule__XExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getXExpressionAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getTypeAssignment_1_1()); }
(rule__XExpression__TypeAssignment_1_1)
{ after(grammarAccess.getXExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSizeOfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__0__Impl
	rule__XSizeOfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getSizeofKeyword_0()); }

	'sizeof' 

{ after(grammarAccess.getXSizeOfExpressionAccess().getSizeofKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSizeOfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__1__Impl
	rule__XSizeOfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXSizeOfExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSizeOfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__2__Impl
	rule__XSizeOfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getTypeAssignment_2()); }
(rule__XSizeOfExpression__TypeAssignment_2)
{ after(grammarAccess.getXSizeOfExpressionAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSizeOfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXSizeOfExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XStructExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__0__Impl
	rule__XStructExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getTypeAssignment_0()); }
(rule__XStructExpression__TypeAssignment_0)
{ after(grammarAccess.getXStructExpressionAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__1__Impl
	rule__XStructExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getXStructExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__2__Impl
	rule__XStructExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesAssignment_2()); }
(rule__XStructExpression__ValuesAssignment_2)
{ after(grammarAccess.getXStructExpressionAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__3__Impl
	rule__XStructExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getGroup_3()); }
(rule__XStructExpression__Group_3__0)*
{ after(grammarAccess.getXStructExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__4__Impl
	rule__XStructExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getCommaKeyword_4()); }
(
	',' 
)?
{ after(grammarAccess.getXStructExpressionAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getXStructExpressionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XStructExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group_3__0__Impl
	rule__XStructExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getXStructExpressionAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesAssignment_3_1()); }
(rule__XStructExpression__ValuesAssignment_3_1)
{ after(grammarAccess.getXStructExpressionAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression1__Group__0__Impl
	rule__XExpression1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getOperatorAssignment_0()); }
(rule__XExpression1__OperatorAssignment_0)*
{ after(grammarAccess.getXExpression1Access().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getAAssignment_1()); }
(rule__XExpression1__AAssignment_1)
{ after(grammarAccess.getXExpression1Access().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression0__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group__0__Impl
	rule__XExpression0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getAAssignment_0()); }
(rule__XExpression0__AAssignment_0)
{ after(grammarAccess.getXExpression0Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression0__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getGroup_1()); }
(rule__XExpression0__Group_1__0)*
{ after(grammarAccess.getXExpression0Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression0__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group_1__0__Impl
	rule__XExpression0__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getHyphenMinusGreaterThanSignKeyword_1_0()); }

	'->' 

{ after(grammarAccess.getXExpression0Access().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression0__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getMemberAssignment_1_1()); }
(rule__XExpression0__MemberAssignment_1_1)
{ after(grammarAccess.getXExpression0Access().getMemberAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionM1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group__0__Impl
	rule__XExpressionM1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getAAssignment_0()); }
(rule__XExpressionM1__AAssignment_0)
{ after(grammarAccess.getXExpressionM1Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionM1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getGroup_1()); }
(rule__XExpressionM1__Group_1__0)*
{ after(grammarAccess.getXExpressionM1Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionM1__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group_1__0__Impl
	rule__XExpressionM1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getXExpressionM1Access().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionM1__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group_1__1__Impl
	rule__XExpressionM1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getIndexAssignment_1_1()); }
(rule__XExpressionM1__IndexAssignment_1_1)
{ after(grammarAccess.getXExpressionM1Access().getIndexAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionM1__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getXExpressionM1Access().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group__0__Impl
	rule__XExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getAAssignment_0()); }
(rule__XExpression2__AAssignment_0)
{ after(grammarAccess.getXExpression2Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getGroup_1()); }
(rule__XExpression2__Group_1__0)*
{ after(grammarAccess.getXExpression2Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression2__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group_1__0__Impl
	rule__XExpression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getOpAssignment_1_0()); }
(rule__XExpression2__OpAssignment_1_0)
{ after(grammarAccess.getXExpression2Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression2__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getBAssignment_1_1()); }
(rule__XExpression2__BAssignment_1_1)
{ after(grammarAccess.getXExpression2Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression3__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group__0__Impl
	rule__XExpression3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getAAssignment_0()); }
(rule__XExpression3__AAssignment_0)
{ after(grammarAccess.getXExpression3Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression3__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getGroup_1()); }
(rule__XExpression3__Group_1__0)*
{ after(grammarAccess.getXExpression3Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression3__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group_1__0__Impl
	rule__XExpression3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getOpAssignment_1_0()); }
(rule__XExpression3__OpAssignment_1_0)
{ after(grammarAccess.getXExpression3Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression3__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getBAssignment_1_1()); }
(rule__XExpression3__BAssignment_1_1)
{ after(grammarAccess.getXExpression3Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression4__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group__0__Impl
	rule__XExpression4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getAAssignment_0()); }
(rule__XExpression4__AAssignment_0)
{ after(grammarAccess.getXExpression4Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression4__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getGroup_1()); }
(rule__XExpression4__Group_1__0)*
{ after(grammarAccess.getXExpression4Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression4__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group_1__0__Impl
	rule__XExpression4__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getOpAssignment_1_0()); }
(rule__XExpression4__OpAssignment_1_0)
{ after(grammarAccess.getXExpression4Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression4__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getBAssignment_1_1()); }
(rule__XExpression4__BAssignment_1_1)
{ after(grammarAccess.getXExpression4Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression5__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group__0__Impl
	rule__XExpression5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getAAssignment_0()); }
(rule__XExpression5__AAssignment_0)
{ after(grammarAccess.getXExpression5Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression5__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getGroup_1()); }
(rule__XExpression5__Group_1__0)*
{ after(grammarAccess.getXExpression5Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression5__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group_1__0__Impl
	rule__XExpression5__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getOpAssignment_1_0()); }
(rule__XExpression5__OpAssignment_1_0)
{ after(grammarAccess.getXExpression5Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression5__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getBAssignment_1_1()); }
(rule__XExpression5__BAssignment_1_1)
{ after(grammarAccess.getXExpression5Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression6__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group__0__Impl
	rule__XExpression6__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getGroup_0()); }
(rule__XExpression6__Group_0__0)*
{ after(grammarAccess.getXExpression6Access().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression6__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getAAssignment_1()); }
(rule__XExpression6__AAssignment_1)
{ after(grammarAccess.getXExpression6Access().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression6__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group_0__0__Impl
	rule__XExpression6__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getRefAssignment_0_0()); }
(rule__XExpression6__RefAssignment_0_0)
{ after(grammarAccess.getXExpression6Access().getRefAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression6__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getOpSingleAssignParserRuleCall_0_1()); }
	ruleOpSingleAssign
{ after(grammarAccess.getXExpression6Access().getOpSingleAssignParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTopLevelExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_0__0__Impl
	rule__XTopLevelExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getAnnotationParserRuleCall_0_0()); }
	ruleAnnotation
{ after(grammarAccess.getXTopLevelExpressionAccess().getAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTopLevelExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTopLevelExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_1__0__Impl
	rule__XTopLevelExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getXExpressionParserRuleCall_1_0()); }
	ruleXExpression
{ after(grammarAccess.getXTopLevelExpressionAccess().getXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTopLevelExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XIsLiteralExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__0__Impl
	rule__XIsLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getIsliteralKeyword_0()); }

	'isliteral' 

{ after(grammarAccess.getXIsLiteralExpressionAccess().getIsliteralKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIsLiteralExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__1__Impl
	rule__XIsLiteralExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXIsLiteralExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIsLiteralExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__2__Impl
	rule__XIsLiteralExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getRefAssignment_2()); }
(rule__XIsLiteralExpression__RefAssignment_2)
{ after(grammarAccess.getXIsLiteralExpressionAccess().getRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIsLiteralExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXIsLiteralExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__0__Impl
	rule__XIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getXIfExpressionAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__1__Impl
	rule__XIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__2__Impl
	rule__XIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfAssignment_2()); }
(rule__XIfExpression__IfAssignment_2)
{ after(grammarAccess.getXIfExpressionAccess().getIfAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__3__Impl
	rule__XIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__4__Impl
	rule__XIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getXIfExpressionAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__5__Impl
	rule__XIfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
(rule__XIfExpression__ThenAssignment_5)
{ after(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__6__Impl
	rule__XIfExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getXIfExpressionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup_7()); }
(rule__XIfExpression__Group_7__0)?
{ after(grammarAccess.getXIfExpressionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__XIfExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_7__0__Impl
	rule__XIfExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseKeyword_7_0()); }
(
	'else' 
)
{ after(grammarAccess.getXIfExpressionAccess().getElseKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_7__1__Impl
	rule__XIfExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getXIfExpressionAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_7__2__Impl
	rule__XIfExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseAssignment_7_2()); }
(rule__XIfExpression__ElseAssignment_7_2)
{ after(grammarAccess.getXIfExpressionAccess().getElseAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getXIfExpressionAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__0__Impl
	rule__XWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__1__Impl
	rule__XWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__2__Impl
	rule__XWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getCondAssignment_2()); }
(rule__XWhileExpression__CondAssignment_2)
{ after(grammarAccess.getXWhileExpressionAccess().getCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__3__Impl
	rule__XWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__4__Impl
	rule__XWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getXWhileExpressionAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__5__Impl
	rule__XWhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getDoAssignment_5()); }
(rule__XWhileExpression__DoAssignment_5)
{ after(grammarAccess.getXWhileExpressionAccess().getDoAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getXWhileExpressionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__0__Impl
	rule__XParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__1__Impl
	rule__XParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getAAssignment_1()); }
(rule__XParenthesizedExpression__AAssignment_1)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__AnnotationDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__DefinitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getDefinitionAnnotationDefinitionCrossReference_1_0()); }
(
{ before(grammarAccess.getAnnotationAccess().getDefinitionAnnotationDefinitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAnnotationAccess().getDefinitionAnnotationDefinitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAnnotationAccess().getDefinitionAnnotationDefinitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getLibraryAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__OverridesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getOverridesLibraryCrossReference_2_1_0()); }
(
{ before(grammarAccess.getLibraryAccess().getOverridesLibraryQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getLibraryAccess().getOverridesLibraryQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getLibraryAccess().getOverridesLibraryCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__OverridesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getOverridesLibraryCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getLibraryAccess().getOverridesLibraryQualifiedNameParserRuleCall_2_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getLibraryAccess().getOverridesLibraryQualifiedNameParserRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getLibraryAccess().getOverridesLibraryCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__UseAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getUseLibraryCrossReference_4_1_0()); }
(
{ before(grammarAccess.getLibraryAccess().getUseLibraryQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getLibraryAccess().getUseLibraryQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getLibraryAccess().getUseLibraryCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__ItemsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getItemsLibraryItemParserRuleCall_5_0()); }
	ruleLibraryItem{ after(grammarAccess.getLibraryAccess().getItemsLibraryItemParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefTypeDefParserRuleCall_3_0()); }
	ruleTypeDef{ after(grammarAccess.getTypeAccess().getDefTypeDefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__DefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getDefTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getPointerTypeDefAccess().getDefTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getSizeXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getArrayTypeDefAccess().getSizeXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__DefAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getDefTypeDefParserRuleCall_5_0()); }
	ruleTypeDef{ after(grammarAccess.getArrayTypeDefAccess().getDefTypeDefParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefTypeDef__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTypeDefAccess().getTypeTypeCrossReference_0()); }
(
{ before(grammarAccess.getRefTypeDefAccess().getTypeTypeQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRefTypeDefAccess().getTypeTypeQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getRefTypeDefAccess().getTypeTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__BitsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getFixedDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__ScaleAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getScaleREALTerminalRuleCall_5_0()); }
	RULE_REAL{ after(grammarAccess.getFixedDataTypeDefAccess().getScaleREALTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__KindAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getKindIntegerKindEnumRuleCall_0_0()); }
	ruleIntegerKind{ after(grammarAccess.getIntegerDataTypeDefAccess().getKindIntegerKindEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__BitsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getIntegerDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__MembersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_3_0()); }
	ruleStructTypeDefMember{ after(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__MembersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_4_1_0()); }
	ruleStructTypeDefMember{ after(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getTypeTypeDefParserRuleCall_1_0()); }
	ruleTypeDef{ after(grammarAccess.getStructTypeDefMemberAccess().getTypeTypeDefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStructTypeDefMemberAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getConstantVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getConstantVariableAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getValueXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getConstantVariableAccess().getValueXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getRegisterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getRegisterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__AddrAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getAddrXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getRegisterVariableAccess().getAddrXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionWord__SectionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionWordAccess().getSectionsWordSectionParserRuleCall_1_0()); }
	ruleWordSection{ after(grammarAccess.getInstructionWordAccess().getSectionsWordSectionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getSizeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getWordSectionAccess().getSizeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordSection__ShiftAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordSectionAccess().getShiftINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getWordSectionAccess().getShiftINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getValueLITERALParserRuleCall_0()); }
	ruleLITERAL{ after(grammarAccess.getLiteralValueAccess().getValueLITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeTypeDefParserRuleCall_0_0()); }
	ruleTypeDef{ after(grammarAccess.getVariableAccess().getTypeTypeDefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VarAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarVariableCrossReference_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVarVariableQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVariableReferenceAccess().getVarVariableQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVarVariableCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__OperationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getOperationOperationCrossReference_0_0()); }
(
{ before(grammarAccess.getOperationCallAccess().getOperationOperationQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getOperationCallAccess().getOperationOperationQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOperationCallAccess().getOperationOperationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_0_0()); }
	ruleOperationCallParameter{ after(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_1_1_0()); }
	ruleOperationCallParameter{ after(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Operation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsParameterVariableParserRuleCall_3_0_0()); }
	ruleParameterVariable{ after(grammarAccess.getOperationAccess().getParamsParameterVariableParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParamsParameterVariableParserRuleCall_3_1_1_0()); }
	ruleParameterVariable{ after(grammarAccess.getOperationAccess().getParamsParameterVariableParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__BlockAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getBlockOperationBlockParserRuleCall_6_0()); }
	ruleOperationBlock{ after(grammarAccess.getOperationAccess().getBlockOperationBlockParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ReturnAssignment_8_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnXExpressionParserRuleCall_8_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getOperationAccess().getReturnXExpressionParserRuleCall_8_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ReturnvarAssignment_8_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnvarVariableParserRuleCall_8_1_1_0()); }
	ruleVariable{ after(grammarAccess.getOperationAccess().getReturnvarVariableParserRuleCall_8_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationBlock__StepsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationBlockAccess().getStepsOperationStepParserRuleCall_1_0()); }
	ruleOperationStep{ after(grammarAccess.getOperationBlockAccess().getStepsOperationStepParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__KindAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getKindParameterKindEnumRuleCall_1_0()); }
	ruleParameterKind{ after(grammarAccess.getParameterVariableAccess().getKindParameterKindEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getParameterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getParameterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__DefaultAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getDefaultLITERALParserRuleCall_4_1_0()); }
	ruleLITERAL{ after(grammarAccess.getParameterVariableAccess().getDefaultLITERALParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__RoleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getRoleOperationRoleEnumRuleCall_1_0()); }
	ruleOperationRole{ after(grammarAccess.getOperatorDefinitionAccess().getRoleOperationRoleEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__CandidateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationCrossReference_3_0()); }
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorDefinition__CandidateAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationCrossReference_4_1_0()); }
(
{ before(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getOperatorDefinitionAccess().getCandidateOperationCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getLinkedBinaryAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getTypeBinaryTypeEnumRuleCall_2_0()); }
	ruleBinaryType{ after(grammarAccess.getLinkedBinaryAccess().getTypeBinaryTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__UseAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getUseLibraryCrossReference_4_1_0()); }
(
{ before(grammarAccess.getLinkedBinaryAccess().getUseLibraryQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getLinkedBinaryAccess().getUseLibraryQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getLinkedBinaryAccess().getUseLibraryCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBinary__SectionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedBinaryAccess().getSectionsBinarySectionParserRuleCall_5_0()); }
	ruleBinarySection{ after(grammarAccess.getLinkedBinaryAccess().getSectionsBinarySectionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySection__StartAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinarySectionAccess().getStartXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getBinarySectionAccess().getStartXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionBinarySectionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__StartAddrAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getStartAddrLITERALParserRuleCall_5_0()); }
	ruleLITERAL{ after(grammarAccess.getFunctionBinarySectionAccess().getStartAddrLITERALParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__MemwidthAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getMemwidthLITERALParserRuleCall_9_0()); }
	ruleLITERAL{ after(grammarAccess.getFunctionBinarySectionAccess().getMemwidthLITERALParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__PointerTypeAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getPointerTypeTypeDefParserRuleCall_13_0()); }
	ruleTypeDef{ after(grammarAccess.getFunctionBinarySectionAccess().getPointerTypeTypeDefParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__AddressTypeAssignment_17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getAddressTypeTypeDefParserRuleCall_17_0()); }
	ruleTypeDef{ after(grammarAccess.getFunctionBinarySectionAccess().getAddressTypeTypeDefParserRuleCall_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__MemsAssignment_19_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getMemsFunctionMemoryParserRuleCall_19_0_0()); }
	ruleFunctionMemory{ after(grammarAccess.getFunctionBinarySectionAccess().getMemsFunctionMemoryParserRuleCall_19_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__OptimizercallsAssignment_20_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getOptimizercallsOptimizerCallParserRuleCall_20_0_0()); }
	ruleOptimizerCall{ after(grammarAccess.getFunctionBinarySectionAccess().getOptimizercallsOptimizerCallParserRuleCall_20_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__LibAssignment_23_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLibLibraryCrossReference_23_1_0()); }
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getLibLibraryQualifiedNameParserRuleCall_23_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFunctionBinarySectionAccess().getLibLibraryQualifiedNameParserRuleCall_23_1_0_1()); }
)
{ after(grammarAccess.getFunctionBinarySectionAccess().getLibLibraryCrossReference_23_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBinarySection__DoAssignment_26
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBinarySectionAccess().getDoOperationBlockParserRuleCall_26_0()); }
	ruleOperationBlock{ after(grammarAccess.getFunctionBinarySectionAccess().getDoOperationBlockParserRuleCall_26_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptimizerCall__OptimizerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptimizerCallAccess().getOptimizerSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getOptimizerCallAccess().getOptimizerSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemory__StartAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemoryAccess().getStartLITERALParserRuleCall_1_0()); }
	ruleLITERAL{ after(grammarAccess.getFunctionMemoryAccess().getStartLITERALParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionMemory__EndAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionMemoryAccess().getEndLITERALParserRuleCall_3_0()); }
	ruleLITERAL{ after(grammarAccess.getFunctionMemoryAccess().getEndLITERALParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantBinarySection__DataAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantBinarySectionAccess().getDataXExpressionParserRuleCall_2_0_0()); }
	ruleXExpression{ after(grammarAccess.getConstantBinarySectionAccess().getDataXExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceBinarySection__IncAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceBinarySectionAccess().getIncLinkedBinaryCrossReference_1_0()); }
(
{ before(grammarAccess.getReferenceBinarySectionAccess().getIncLinkedBinaryQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getReferenceBinarySectionAccess().getIncLinkedBinaryQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getReferenceBinarySectionAccess().getIncLinkedBinaryCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getTypeTypeDefParserRuleCall_1_1_0()); }
	ruleTypeDef{ after(grammarAccess.getXExpressionAccess().getTypeTypeDefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getXSizeOfExpressionAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getTypeTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getXStructExpressionAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXStructExpressionAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getXStructExpressionAccess().getTypeTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_3_1_0()); }
	ruleXExpression{ after(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getOperatorUNARY_OPERATOREnumRuleCall_0_0()); }
	ruleUNARY_OPERATOR{ after(grammarAccess.getXExpression1Access().getOperatorUNARY_OPERATOREnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getAXExpression0ParserRuleCall_1_0()); }
	ruleXExpression0{ after(grammarAccess.getXExpression1Access().getAXExpression0ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getAXExpressionM1ParserRuleCall_0_0()); }
	ruleXExpressionM1{ after(grammarAccess.getXExpression0Access().getAXExpressionM1ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__MemberAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getMemberIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getXExpression0Access().getMemberIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getAXPrimaryExpressionParserRuleCall_0_0()); }
	ruleXPrimaryExpression{ after(grammarAccess.getXExpressionM1Access().getAXPrimaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__IndexAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getIndexXExpressionParserRuleCall_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXExpressionM1Access().getIndexXExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getAXExpression1ParserRuleCall_0_0()); }
	ruleXExpression1{ after(grammarAccess.getXExpression2Access().getAXExpression1ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getOpMULTIPLICATIVE_OPERATOREnumRuleCall_1_0_0()); }
	ruleMULTIPLICATIVE_OPERATOR{ after(grammarAccess.getXExpression2Access().getOpMULTIPLICATIVE_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getBXExpression2ParserRuleCall_1_1_0()); }
	ruleXExpression2{ after(grammarAccess.getXExpression2Access().getBXExpression2ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getAXExpression2ParserRuleCall_0_0()); }
	ruleXExpression2{ after(grammarAccess.getXExpression3Access().getAXExpression2ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getOpADDITIVE_OPERATOREnumRuleCall_1_0_0()); }
	ruleADDITIVE_OPERATOR{ after(grammarAccess.getXExpression3Access().getOpADDITIVE_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getBXExpression2ParserRuleCall_1_1_0()); }
	ruleXExpression2{ after(grammarAccess.getXExpression3Access().getBXExpression2ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getAXExpression3ParserRuleCall_0_0()); }
	ruleXExpression3{ after(grammarAccess.getXExpression4Access().getAXExpression3ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getOpEQUALITY_OPERATOREnumRuleCall_1_0_0()); }
	ruleEQUALITY_OPERATOR{ after(grammarAccess.getXExpression4Access().getOpEQUALITY_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getBXExpression3ParserRuleCall_1_1_0()); }
	ruleXExpression3{ after(grammarAccess.getXExpression4Access().getBXExpression3ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getAXExpression4ParserRuleCall_0_0()); }
	ruleXExpression4{ after(grammarAccess.getXExpression5Access().getAXExpression4ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getOpBOOLEAN_OPERATOREnumRuleCall_1_0_0()); }
	ruleBOOLEAN_OPERATOR{ after(grammarAccess.getXExpression5Access().getOpBOOLEAN_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getBXExpression4ParserRuleCall_1_1_0()); }
	ruleXExpression4{ after(grammarAccess.getXExpression5Access().getBXExpression4ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__RefAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getRefVariableReferenceParserRuleCall_0_0_0()); }
	ruleVariableReference{ after(grammarAccess.getXExpression6Access().getRefVariableReferenceParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getAXExpression5ParserRuleCall_1_0()); }
	ruleXExpression5{ after(grammarAccess.getXExpression6Access().getAXExpression5ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionLiteralAccess().getValueLITERALParserRuleCall_0()); }
	ruleLITERAL{ after(grammarAccess.getXExpressionLiteralAccess().getValueLITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__RefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getRefVariableReferenceParserRuleCall_2_0()); }
	ruleVariableReference{ after(grammarAccess.getXIsLiteralExpressionAccess().getRefVariableReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__IfAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenOperationBlockParserRuleCall_5_0()); }
	ruleOperationBlock{ after(grammarAccess.getXIfExpressionAccess().getThenOperationBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ElseAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseOperationBlockParserRuleCall_7_2_0()); }
	ruleOperationBlock{ after(grammarAccess.getXIfExpressionAccess().getElseOperationBlockParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getCondXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getCondXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__DoAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getDoOperationBlockParserRuleCall_5_0()); }
	ruleOperationBlock{ after(grammarAccess.getXWhileExpressionAccess().getDoOperationBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getAXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXParenthesizedExpressionAccess().getAXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HEXINT : '0x' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_BINARY : 'b' ('0'|'1')+;

RULE_REAL : RULE_INT '.' RULE_INT?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



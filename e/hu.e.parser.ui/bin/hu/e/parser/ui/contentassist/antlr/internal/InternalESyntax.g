/*
* generated by Xtext
*/
grammar InternalESyntax;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package hu.e.parser.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.e.parser.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import hu.e.parser.services.ESyntaxGrammarAccess;

}

@parser::members {
 
 	private ESyntaxGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ESyntaxGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit 
:
{ before(grammarAccess.getCompilationUnitRule()); }
	 ruleCompilationUnit
{ after(grammarAccess.getCompilationUnitRule()); } 
	 EOF 
;

// Rule CompilationUnit
ruleCompilationUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompilationUnitAccess().getLibraryParserRuleCall()); }
	ruleLibrary
{ after(grammarAccess.getCompilationUnitAccess().getLibraryParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibraryName
entryRuleLibraryName 
:
{ before(grammarAccess.getLibraryNameRule()); }
	 ruleLibraryName
{ after(grammarAccess.getLibraryNameRule()); } 
	 EOF 
;

// Rule LibraryName
ruleLibraryName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryNameAccess().getGroup()); }
(rule__LibraryName__Group__0)
{ after(grammarAccess.getLibraryNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLITERAL
entryRuleLITERAL 
:
{ before(grammarAccess.getLITERALRule()); }
	 ruleLITERAL
{ after(grammarAccess.getLITERALRule()); } 
	 EOF 
;

// Rule LITERAL
ruleLITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLITERALAccess().getAlternatives()); }
(rule__LITERAL__Alternatives)
{ after(grammarAccess.getLITERALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationDefinition
entryRuleAnnotationDefinition 
:
{ before(grammarAccess.getAnnotationDefinitionRule()); }
	 ruleAnnotationDefinition
{ after(grammarAccess.getAnnotationDefinitionRule()); } 
	 EOF 
;

// Rule AnnotationDefinition
ruleAnnotationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getGroup()); }
(rule__AnnotationDefinition__Group__0)
{ after(grammarAccess.getAnnotationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibrary
entryRuleLibrary 
:
{ before(grammarAccess.getLibraryRule()); }
	 ruleLibrary
{ after(grammarAccess.getLibraryRule()); } 
	 EOF 
;

// Rule Library
ruleLibrary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryAccess().getGroup()); }
(rule__Library__Group__0)
{ after(grammarAccess.getLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibraryItem
entryRuleLibraryItem 
:
{ before(grammarAccess.getLibraryItemRule()); }
	 ruleLibraryItem
{ after(grammarAccess.getLibraryItemRule()); } 
	 EOF 
;

// Rule LibraryItem
ruleLibraryItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryItemAccess().getAlternatives()); }
(rule__LibraryItem__Alternatives)
{ after(grammarAccess.getLibraryItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDef
entryRuleTypeDef 
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDefAccess().getAlternatives()); }
(rule__TypeDef__Alternatives)
{ after(grammarAccess.getTypeDefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnspecifiedTypeDef
entryRuleUnspecifiedTypeDef 
:
{ before(grammarAccess.getUnspecifiedTypeDefRule()); }
	 ruleUnspecifiedTypeDef
{ after(grammarAccess.getUnspecifiedTypeDefRule()); } 
	 EOF 
;

// Rule UnspecifiedTypeDef
ruleUnspecifiedTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnspecifiedTypeDefAccess().getGroup()); }
(rule__UnspecifiedTypeDef__Group__0)
{ after(grammarAccess.getUnspecifiedTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePointerTypeDef
entryRulePointerTypeDef 
:
{ before(grammarAccess.getPointerTypeDefRule()); }
	 rulePointerTypeDef
{ after(grammarAccess.getPointerTypeDefRule()); } 
	 EOF 
;

// Rule PointerTypeDef
rulePointerTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointerTypeDefAccess().getGroup()); }
(rule__PointerTypeDef__Group__0)
{ after(grammarAccess.getPointerTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayTypeDef
entryRuleArrayTypeDef 
:
{ before(grammarAccess.getArrayTypeDefRule()); }
	 ruleArrayTypeDef
{ after(grammarAccess.getArrayTypeDefRule()); } 
	 EOF 
;

// Rule ArrayTypeDef
ruleArrayTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayTypeDefAccess().getGroup()); }
(rule__ArrayTypeDef__Group__0)
{ after(grammarAccess.getArrayTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefTypeDef
entryRuleRefTypeDef 
:
{ before(grammarAccess.getRefTypeDefRule()); }
	 ruleRefTypeDef
{ after(grammarAccess.getRefTypeDefRule()); } 
	 EOF 
;

// Rule RefTypeDef
ruleRefTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefTypeDefAccess().getTypeAssignment()); }
(rule__RefTypeDef__TypeAssignment)
{ after(grammarAccess.getRefTypeDefAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDef
entryRuleDataTypeDef 
:
{ before(grammarAccess.getDataTypeDefRule()); }
	 ruleDataTypeDef
{ after(grammarAccess.getDataTypeDefRule()); } 
	 EOF 
;

// Rule DataTypeDef
ruleDataTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefAccess().getAlternatives()); }
(rule__DataTypeDef__Alternatives)
{ after(grammarAccess.getDataTypeDefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedDataTypeDef
entryRuleFixedDataTypeDef 
:
{ before(grammarAccess.getFixedDataTypeDefRule()); }
	 ruleFixedDataTypeDef
{ after(grammarAccess.getFixedDataTypeDefRule()); } 
	 EOF 
;

// Rule FixedDataTypeDef
ruleFixedDataTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getGroup()); }
(rule__FixedDataTypeDef__Group__0)
{ after(grammarAccess.getFixedDataTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerDataTypeDef
entryRuleIntegerDataTypeDef 
:
{ before(grammarAccess.getIntegerDataTypeDefRule()); }
	 ruleIntegerDataTypeDef
{ after(grammarAccess.getIntegerDataTypeDefRule()); } 
	 EOF 
;

// Rule IntegerDataTypeDef
ruleIntegerDataTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getGroup()); }
(rule__IntegerDataTypeDef__Group__0)
{ after(grammarAccess.getIntegerDataTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructTypeDef
entryRuleStructTypeDef 
:
{ before(grammarAccess.getStructTypeDefRule()); }
	 ruleStructTypeDef
{ after(grammarAccess.getStructTypeDefRule()); } 
	 EOF 
;

// Rule StructTypeDef
ruleStructTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeDefAccess().getGroup()); }
(rule__StructTypeDef__Group__0)
{ after(grammarAccess.getStructTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructTypeDefMember
entryRuleStructTypeDefMember 
:
{ before(grammarAccess.getStructTypeDefMemberRule()); }
	 ruleStructTypeDefMember
{ after(grammarAccess.getStructTypeDefMemberRule()); } 
	 EOF 
;

// Rule StructTypeDefMember
ruleStructTypeDefMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getGroup()); }
(rule__StructTypeDefMember__Group__0)
{ after(grammarAccess.getStructTypeDefMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantVariable
entryRuleConstantVariable 
:
{ before(grammarAccess.getConstantVariableRule()); }
	 ruleConstantVariable
{ after(grammarAccess.getConstantVariableRule()); } 
	 EOF 
;

// Rule ConstantVariable
ruleConstantVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantVariableAccess().getGroup()); }
(rule__ConstantVariable__Group__0)
{ after(grammarAccess.getConstantVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegisterVariable
entryRuleRegisterVariable 
:
{ before(grammarAccess.getRegisterVariableRule()); }
	 ruleRegisterVariable
{ after(grammarAccess.getRegisterVariableRule()); } 
	 EOF 
;

// Rule RegisterVariable
ruleRegisterVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegisterVariableAccess().getGroup()); }
(rule__RegisterVariable__Group__0)
{ after(grammarAccess.getRegisterVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationStep
entryRuleOperationStep 
:
{ before(grammarAccess.getOperationStepRule()); }
	 ruleOperationStep
{ after(grammarAccess.getOperationStepRule()); } 
	 EOF 
;

// Rule OperationStep
ruleOperationStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationStepAccess().getAlternatives()); }
(rule__OperationStep__Alternatives)
{ after(grammarAccess.getOperationStepAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getGroup()); }
(rule__Label__Group__0)
{ after(grammarAccess.getLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarAssignment()); }
(rule__VariableReference__VarAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getVarAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCall
entryRuleOperationCall 
:
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationCallAccess().getGroup()); }
(rule__OperationCall__Group__0)
{ after(grammarAccess.getOperationCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCallParameter
entryRuleOperationCallParameter 
:
{ before(grammarAccess.getOperationCallParameterRule()); }
	 ruleOperationCallParameter
{ after(grammarAccess.getOperationCallParameterRule()); } 
	 EOF 
;

// Rule OperationCallParameter
ruleOperationCallParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationCallParameterAccess().getXExpressionParserRuleCall()); }
	ruleXExpression
{ after(grammarAccess.getOperationCallParameterAccess().getXExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationTypeDef
entryRuleOperationTypeDef 
:
{ before(grammarAccess.getOperationTypeDefRule()); }
	 ruleOperationTypeDef
{ after(grammarAccess.getOperationTypeDefRule()); } 
	 EOF 
;

// Rule OperationTypeDef
ruleOperationTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationTypeDefAccess().getGroup()); }
(rule__OperationTypeDef__Group__0)
{ after(grammarAccess.getOperationTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationParameter
entryRuleOperationParameter 
:
{ before(grammarAccess.getOperationParameterRule()); }
	 ruleOperationParameter
{ after(grammarAccess.getOperationParameterRule()); } 
	 EOF 
;

// Rule OperationParameter
ruleOperationParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationParameterAccess().getAlternatives()); }
(rule__OperationParameter__Alternatives)
{ after(grammarAccess.getOperationParameterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLazyParameter
entryRuleLazyParameter 
:
{ before(grammarAccess.getLazyParameterRule()); }
	 ruleLazyParameter
{ after(grammarAccess.getLazyParameterRule()); } 
	 EOF 
;

// Rule LazyParameter
ruleLazyParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLazyParameterAccess().getGroup()); }
(rule__LazyParameter__Group__0)
{ after(grammarAccess.getLazyParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterVariable
entryRuleParameterVariable 
:
{ before(grammarAccess.getParameterVariableRule()); }
	 ruleParameterVariable
{ after(grammarAccess.getParameterVariableRule()); } 
	 EOF 
;

// Rule ParameterVariable
ruleParameterVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterVariableAccess().getGroup()); }
(rule__ParameterVariable__Group__0)
{ after(grammarAccess.getParameterVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression
entryRuleXExpression 
:
{ before(grammarAccess.getXExpressionRule()); }
	 ruleXExpression
{ after(grammarAccess.getXExpressionRule()); } 
	 EOF 
;

// Rule XExpression
ruleXExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionAccess().getGroup()); }
(rule__XExpression__Group__0)
{ after(grammarAccess.getXExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionBlock
entryRuleXExpressionBlock 
:
{ before(grammarAccess.getXExpressionBlockRule()); }
	 ruleXExpressionBlock
{ after(grammarAccess.getXExpressionBlockRule()); } 
	 EOF 
;

// Rule XExpressionBlock
ruleXExpressionBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionBlockAccess().getGroup()); }
(rule__XExpressionBlock__Group__0)
{ after(grammarAccess.getXExpressionBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression 
:
{ before(grammarAccess.getXPrimaryExpressionRule()); }
	 ruleXPrimaryExpression
{ after(grammarAccess.getXPrimaryExpressionRule()); } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
(rule__XPrimaryExpression__Alternatives)
{ after(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSizeOfExpression
entryRuleXSizeOfExpression 
:
{ before(grammarAccess.getXSizeOfExpressionRule()); }
	 ruleXSizeOfExpression
{ after(grammarAccess.getXSizeOfExpressionRule()); } 
	 EOF 
;

// Rule XSizeOfExpression
ruleXSizeOfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getGroup()); }
(rule__XSizeOfExpression__Group__0)
{ after(grammarAccess.getXSizeOfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXStructExpression
entryRuleXStructExpression 
:
{ before(grammarAccess.getXStructExpressionRule()); }
	 ruleXStructExpression
{ after(grammarAccess.getXStructExpressionRule()); } 
	 EOF 
;

// Rule XStructExpression
ruleXStructExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXStructExpressionAccess().getGroup()); }
(rule__XStructExpression__Group__0)
{ after(grammarAccess.getXStructExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression1
entryRuleXExpression1 
:
{ before(grammarAccess.getXExpression1Rule()); }
	 ruleXExpression1
{ after(grammarAccess.getXExpression1Rule()); } 
	 EOF 
;

// Rule XExpression1
ruleXExpression1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression1Access().getGroup()); }
(rule__XExpression1__Group__0)
{ after(grammarAccess.getXExpression1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression0
entryRuleXExpression0 
:
{ before(grammarAccess.getXExpression0Rule()); }
	 ruleXExpression0
{ after(grammarAccess.getXExpression0Rule()); } 
	 EOF 
;

// Rule XExpression0
ruleXExpression0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression0Access().getGroup()); }
(rule__XExpression0__Group__0)
{ after(grammarAccess.getXExpression0Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionM1
entryRuleXExpressionM1 
:
{ before(grammarAccess.getXExpressionM1Rule()); }
	 ruleXExpressionM1
{ after(grammarAccess.getXExpressionM1Rule()); } 
	 EOF 
;

// Rule XExpressionM1
ruleXExpressionM1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionM1Access().getGroup()); }
(rule__XExpressionM1__Group__0)
{ after(grammarAccess.getXExpressionM1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression2
entryRuleXExpression2 
:
{ before(grammarAccess.getXExpression2Rule()); }
	 ruleXExpression2
{ after(grammarAccess.getXExpression2Rule()); } 
	 EOF 
;

// Rule XExpression2
ruleXExpression2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression2Access().getGroup()); }
(rule__XExpression2__Group__0)
{ after(grammarAccess.getXExpression2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression3
entryRuleXExpression3 
:
{ before(grammarAccess.getXExpression3Rule()); }
	 ruleXExpression3
{ after(grammarAccess.getXExpression3Rule()); } 
	 EOF 
;

// Rule XExpression3
ruleXExpression3
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression3Access().getGroup()); }
(rule__XExpression3__Group__0)
{ after(grammarAccess.getXExpression3Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression4
entryRuleXExpression4 
:
{ before(grammarAccess.getXExpression4Rule()); }
	 ruleXExpression4
{ after(grammarAccess.getXExpression4Rule()); } 
	 EOF 
;

// Rule XExpression4
ruleXExpression4
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression4Access().getGroup()); }
(rule__XExpression4__Group__0)
{ after(grammarAccess.getXExpression4Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression5
entryRuleXExpression5 
:
{ before(grammarAccess.getXExpression5Rule()); }
	 ruleXExpression5
{ after(grammarAccess.getXExpression5Rule()); } 
	 EOF 
;

// Rule XExpression5
ruleXExpression5
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression5Access().getGroup()); }
(rule__XExpression5__Group__0)
{ after(grammarAccess.getXExpression5Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression6
entryRuleXExpression6 
:
{ before(grammarAccess.getXExpression6Rule()); }
	 ruleXExpression6
{ after(grammarAccess.getXExpression6Rule()); } 
	 EOF 
;

// Rule XExpression6
ruleXExpression6
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpression6Access().getGroup()); }
(rule__XExpression6__Group__0)
{ after(grammarAccess.getXExpression6Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionLiteral
entryRuleXExpressionLiteral 
:
{ before(grammarAccess.getXExpressionLiteralRule()); }
	 ruleXExpressionLiteral
{ after(grammarAccess.getXExpressionLiteralRule()); } 
	 EOF 
;

// Rule XExpressionLiteral
ruleXExpressionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionLiteralAccess().getValueAssignment()); }
(rule__XExpressionLiteral__ValueAssignment)
{ after(grammarAccess.getXExpressionLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTopLevelExpression
entryRuleXTopLevelExpression 
:
{ before(grammarAccess.getXTopLevelExpressionRule()); }
	 ruleXTopLevelExpression
{ after(grammarAccess.getXTopLevelExpressionRule()); } 
	 EOF 
;

// Rule XTopLevelExpression
ruleXTopLevelExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getAlternatives()); }
(rule__XTopLevelExpression__Alternatives)
{ after(grammarAccess.getXTopLevelExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXErrorExpression
entryRuleXErrorExpression 
:
{ before(grammarAccess.getXErrorExpressionRule()); }
	 ruleXErrorExpression
{ after(grammarAccess.getXErrorExpressionRule()); } 
	 EOF 
;

// Rule XErrorExpression
ruleXErrorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXErrorExpressionAccess().getGroup()); }
(rule__XErrorExpression__Group__0)
{ after(grammarAccess.getXErrorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIsLiteralExpression
entryRuleXIsLiteralExpression 
:
{ before(grammarAccess.getXIsLiteralExpressionRule()); }
	 ruleXIsLiteralExpression
{ after(grammarAccess.getXIsLiteralExpressionRule()); } 
	 EOF 
;

// Rule XIsLiteralExpression
ruleXIsLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getGroup()); }
(rule__XIsLiteralExpression__Group__0)
{ after(grammarAccess.getXIsLiteralExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression 
:
{ before(grammarAccess.getXParenthesizedExpressionRule()); }
	 ruleXParenthesizedExpression
{ after(grammarAccess.getXParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
(rule__XParenthesizedExpression__Group__0)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule IntegerKind
ruleIntegerKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerKindAccess().getAlternatives()); }
(rule__IntegerKind__Alternatives)
{ after(grammarAccess.getIntegerKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ParameterKind
ruleParameterKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterKindAccess().getAlternatives()); }
(rule__ParameterKind__Alternatives)
{ after(grammarAccess.getParameterKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UNARY_OPERATOR
ruleUNARY_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNARY_OPERATORAccess().getAlternatives()); }
(rule__UNARY_OPERATOR__Alternatives)
{ after(grammarAccess.getUNARY_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MULTIPLICATIVE_OPERATOR
ruleMULTIPLICATIVE_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getAlternatives()); }
(rule__MULTIPLICATIVE_OPERATOR__Alternatives)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ADDITIVE_OPERATOR
ruleADDITIVE_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADDITIVE_OPERATORAccess().getAlternatives()); }
(rule__ADDITIVE_OPERATOR__Alternatives)
{ after(grammarAccess.getADDITIVE_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EQUALITY_OPERATOR
ruleEQUALITY_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getAlternatives()); }
(rule__EQUALITY_OPERATOR__Alternatives)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BOOLEAN_OPERATOR
ruleBOOLEAN_OPERATOR
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getAlternatives()); }
(rule__BOOLEAN_OPERATOR__Alternatives)
{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ErrorLevels
ruleErrorLevels
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorLevelsAccess().getAlternatives()); }
(rule__ErrorLevels__Alternatives)
{ after(grammarAccess.getErrorLevelsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpSingleAssign
ruleOpSingleAssign
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpSingleAssignAccess().getAlternatives()); }
(rule__OpSingleAssign__Alternatives)
{ after(grammarAccess.getOpSingleAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__LITERAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLITERALAccess().getHEXINTTerminalRuleCall_1()); }
	RULE_HEXINT
{ after(grammarAccess.getLITERALAccess().getHEXINTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLITERALAccess().getBINARYTerminalRuleCall_2()); }
	RULE_BINARY
{ after(grammarAccess.getLITERALAccess().getBINARYTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLITERALAccess().getREALTerminalRuleCall_3()); }
	RULE_REAL
{ after(grammarAccess.getLITERALAccess().getREALTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getLibraryItemAccess().getTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getOperationParserRuleCall_1()); }
	ruleOperation
{ after(grammarAccess.getLibraryItemAccess().getOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_2()); }
(rule__LibraryItem__Group_2__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_3()); }
(rule__LibraryItem__Group_3__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_4()); }
(rule__LibraryItem__Group_4__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLibraryItemAccess().getGroup_5()); }
(rule__LibraryItem__Group_5__0)
{ after(grammarAccess.getLibraryItemAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefAccess().getDataTypeDefParserRuleCall_0()); }
	ruleDataTypeDef
{ after(grammarAccess.getTypeDefAccess().getDataTypeDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getStructTypeDefParserRuleCall_1()); }
	ruleStructTypeDef
{ after(grammarAccess.getTypeDefAccess().getStructTypeDefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getPointerTypeDefParserRuleCall_2()); }
	rulePointerTypeDef
{ after(grammarAccess.getTypeDefAccess().getPointerTypeDefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getArrayTypeDefParserRuleCall_3()); }
	ruleArrayTypeDef
{ after(grammarAccess.getTypeDefAccess().getArrayTypeDefParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getRefTypeDefParserRuleCall_4()); }
	ruleRefTypeDef
{ after(grammarAccess.getTypeDefAccess().getRefTypeDefParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getUnspecifiedTypeDefParserRuleCall_5()); }
	ruleUnspecifiedTypeDef
{ after(grammarAccess.getTypeDefAccess().getUnspecifiedTypeDefParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefAccess().getIntegerDataTypeDefParserRuleCall_0()); }
	ruleIntegerDataTypeDef
{ after(grammarAccess.getDataTypeDefAccess().getIntegerDataTypeDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeDefAccess().getFixedDataTypeDefParserRuleCall_1()); }
	ruleFixedDataTypeDef
{ after(grammarAccess.getDataTypeDefAccess().getFixedDataTypeDefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationStep__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationStepAccess().getLabelParserRuleCall_0()); }
	ruleLabel
{ after(grammarAccess.getOperationStepAccess().getLabelParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationStepAccess().getGroup_1()); }
(rule__OperationStep__Group_1__0)
{ after(grammarAccess.getOperationStepAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getOperationStepAccess().getXTopLevelExpressionParserRuleCall_2()); }
	ruleXTopLevelExpression
{ after(grammarAccess.getOperationStepAccess().getXTopLevelExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationParameter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationParameterAccess().getParameterVariableParserRuleCall_0()); }
	ruleParameterVariable
{ after(grammarAccess.getOperationParameterAccess().getParameterVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationParameterAccess().getLazyParameterParserRuleCall_1()); }
	ruleLazyParameter
{ after(grammarAccess.getOperationParameterAccess().getLazyParameterParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXExpressionLiteralParserRuleCall_0()); }
	ruleXExpressionLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXExpressionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_1()); }
	ruleXParenthesizedExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIsLiteralExpressionParserRuleCall_2()); }
	ruleXIsLiteralExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIsLiteralExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getVariableReferenceParserRuleCall_3()); }
	ruleVariableReference
{ after(grammarAccess.getXPrimaryExpressionAccess().getVariableReferenceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getOperationCallParserRuleCall_4()); }
	ruleOperationCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getOperationCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXStructExpressionParserRuleCall_5()); }
	ruleXStructExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXStructExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSizeOfExpressionParserRuleCall_6()); }
	ruleXSizeOfExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSizeOfExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXExpressionBlockParserRuleCall_7()); }
	ruleXExpressionBlock
{ after(grammarAccess.getXPrimaryExpressionAccess().getXExpressionBlockParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getGroup_0()); }
(rule__XTopLevelExpression__Group_0__0)
{ after(grammarAccess.getXTopLevelExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXTopLevelExpressionAccess().getGroup_1()); }
(rule__XTopLevelExpression__Group_1__0)
{ after(grammarAccess.getXTopLevelExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getXTopLevelExpressionAccess().getGroup_2()); }
(rule__XTopLevelExpression__Group_2__0)
{ after(grammarAccess.getXTopLevelExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerKindAccess().getUNSIGNEDEnumLiteralDeclaration_0()); }
(	'unsigned' 
)
{ after(grammarAccess.getIntegerKindAccess().getUNSIGNEDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getIntegerKindAccess().getSIGNEDEnumLiteralDeclaration_1()); }
(	'signed' 
)
{ after(grammarAccess.getIntegerKindAccess().getSIGNEDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterKindAccess().getANYEnumLiteralDeclaration_0()); }
(	'default' 
)
{ after(grammarAccess.getParameterKindAccess().getANYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getParameterKindAccess().getVAREnumLiteralDeclaration_1()); }
(	'var' 
)
{ after(grammarAccess.getParameterKindAccess().getVAREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getParameterKindAccess().getCONSTEnumLiteralDeclaration_2()); }
(	'const' 
)
{ after(grammarAccess.getParameterKindAccess().getCONSTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNARY_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNARY_OPERATORAccess().getMINUSEnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getMINUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUNARY_OPERATORAccess().getNOTEnumLiteralDeclaration_1()); }
(	'!' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getNOTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getUNARY_OPERATORAccess().getREFERENCEEnumLiteralDeclaration_2()); }
(	'&' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getREFERENCEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getUNARY_OPERATORAccess().getDEREFERENCEEnumLiteralDeclaration_3()); }
(	'@' 
)
{ after(grammarAccess.getUNARY_OPERATORAccess().getDEREFERENCEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MULTIPLICATIVE_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMULEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMULEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getDIVEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getDIVEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMODEnumLiteralDeclaration_2()); }
(	'%' 
)
{ after(grammarAccess.getMULTIPLICATIVE_OPERATORAccess().getMODEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADDITIVE_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADDITIVE_OPERATORAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getADDITIVE_OPERATORAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getADDITIVE_OPERATORAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getADDITIVE_OPERATORAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EQUALITY_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getEQUALSEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getEQUALSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getNOTEQUALSEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getNOTEQUALSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getGTEEnumLiteralDeclaration_2()); }
(	'>=' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getGTEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getLTEEnumLiteralDeclaration_3()); }
(	'<=' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getLTEEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getGTEnumLiteralDeclaration_4()); }
(	'>' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getGTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getEQUALITY_OPERATORAccess().getLTEnumLiteralDeclaration_5()); }
(	'<' 
)
{ after(grammarAccess.getEQUALITY_OPERATORAccess().getLTEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getOREnumLiteralDeclaration_0()); }
(	'||' 
)
{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getOREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBOOLEAN_OPERATORAccess().getANDEnumLiteralDeclaration_1()); }
(	'&&' 
)
{ after(grammarAccess.getBOOLEAN_OPERATORAccess().getANDEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorLevels__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorLevelsAccess().getERROREnumLiteralDeclaration_0()); }
(	'error' 
)
{ after(grammarAccess.getErrorLevelsAccess().getERROREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getErrorLevelsAccess().getWARNINGEnumLiteralDeclaration_1()); }
(	'warning' 
)
{ after(grammarAccess.getErrorLevelsAccess().getWARNINGEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getErrorLevelsAccess().getINFOEnumLiteralDeclaration_2()); }
(	'info' 
)
{ after(grammarAccess.getErrorLevelsAccess().getINFOEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpSingleAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpSingleAssignAccess().getASSIGNEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getOpSingleAssignAccess().getASSIGNEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpSingleAssignAccess().getASSIGNADDEnumLiteralDeclaration_1()); }
(	'+=' 
)
{ after(grammarAccess.getOpSingleAssignAccess().getASSIGNADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOpSingleAssignAccess().getASSIGNSUBTRACTEnumLiteralDeclaration_2()); }
(	'-=' 
)
{ after(grammarAccess.getOpSingleAssignAccess().getASSIGNSUBTRACTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__LibraryName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryName__Group__0__Impl
	rule__LibraryName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getLibraryNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryNameAccess().getGroup_1()); }
(rule__LibraryName__Group_1__0)*
{ after(grammarAccess.getLibraryNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LibraryName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryName__Group_1__0__Impl
	rule__LibraryName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getLibraryNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getLibraryNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
(rule__QualifiedName__Group_0__0)?
{ after(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_0__0__Impl
	rule__QualifiedName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getLibraryNameParserRuleCall_0_0()); }
	ruleLibraryName
{ after(grammarAccess.getQualifiedNameAccess().getLibraryNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_0_1()); }

	'::' 

{ after(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDefinition__Group__0__Impl
	rule__AnnotationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getAnnotationKeyword_0()); }

	'annotation' 

{ after(grammarAccess.getAnnotationDefinitionAccess().getAnnotationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getNameAssignment_1()); }
(rule__AnnotationDefinition__NameAssignment_1)
{ after(grammarAccess.getAnnotationDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getAnnotationAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getDefinitionAssignment_1()); }
(rule__Annotation__DefinitionAssignment_1)
{ after(grammarAccess.getAnnotationAccess().getDefinitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Library__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__0__Impl
	rule__Library__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }

	'library' 

{ after(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__1__Impl
	rule__Library__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
(rule__Library__NameAssignment_1)
{ after(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__2__Impl
	rule__Library__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getLibraryAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__3__Impl
	rule__Library__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getGroup_3()); }
(rule__Library__Group_3__0)*
{ after(grammarAccess.getLibraryAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getItemsAssignment_4()); }
(rule__Library__ItemsAssignment_4)*
{ after(grammarAccess.getLibraryAccess().getItemsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Library__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_3__0__Impl
	rule__Library__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getUseKeyword_3_0()); }

	'use' 

{ after(grammarAccess.getLibraryAccess().getUseKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_3__1__Impl
	rule__Library__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getUseAssignment_3_1()); }
(rule__Library__UseAssignment_3_1)
{ after(grammarAccess.getLibraryAccess().getUseAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getSemicolonKeyword_3_2()); }

	';' 

{ after(grammarAccess.getLibraryAccess().getSemicolonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LibraryItem__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_2__0__Impl
	rule__LibraryItem__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getVariableParserRuleCall_2_0()); }
	ruleVariable
{ after(grammarAccess.getLibraryItemAccess().getVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LibraryItem__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_3__0__Impl
	rule__LibraryItem__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getConstantVariableParserRuleCall_3_0()); }
	ruleConstantVariable
{ after(grammarAccess.getLibraryItemAccess().getConstantVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LibraryItem__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_4__0__Impl
	rule__LibraryItem__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getRegisterVariableParserRuleCall_4_0()); }
	ruleRegisterVariable
{ after(grammarAccess.getLibraryItemAccess().getRegisterVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LibraryItem__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_5__0__Impl
	rule__LibraryItem__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getAnnotationDefinitionParserRuleCall_5_0()); }
	ruleAnnotationDefinition
{ after(grammarAccess.getLibraryItemAccess().getAnnotationDefinitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryItem__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LibraryItem__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryItem__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getLibraryItemAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
(rule__Type__NameAssignment_1)
{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTypeAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__3__Impl
	rule__Type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefAssignment_3()); }
(rule__Type__DefAssignment_3)
{ after(grammarAccess.getTypeAccess().getDefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTypeAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnspecifiedTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnspecifiedTypeDef__Group__0__Impl
	rule__UnspecifiedTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnspecifiedTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnspecifiedTypeDefAccess().getUnspecifiedTypeDefAction_0()); }
(

)
{ after(grammarAccess.getUnspecifiedTypeDefAccess().getUnspecifiedTypeDefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnspecifiedTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnspecifiedTypeDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnspecifiedTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnspecifiedTypeDefAccess().getVoidKeyword_1()); }

	'void' 

{ after(grammarAccess.getUnspecifiedTypeDefAccess().getVoidKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PointerTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointerTypeDef__Group__0__Impl
	rule__PointerTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getPointerKeyword_0()); }

	'pointer' 

{ after(grammarAccess.getPointerTypeDefAccess().getPointerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointerTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointerTypeDef__Group__1__Impl
	rule__PointerTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getPointerTypeDefAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointerTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointerTypeDef__Group__2__Impl
	rule__PointerTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getDefAssignment_2()); }
(rule__PointerTypeDef__DefAssignment_2)
{ after(grammarAccess.getPointerTypeDefAccess().getDefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointerTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointerTypeDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getPointerTypeDefAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__0__Impl
	rule__ArrayTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getArrayKeyword_0()); }

	'array' 

{ after(grammarAccess.getArrayTypeDefAccess().getArrayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__1__Impl
	rule__ArrayTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getArrayTypeDefAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__2__Impl
	rule__ArrayTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getDefAssignment_2()); }
(rule__ArrayTypeDef__DefAssignment_2)
{ after(grammarAccess.getArrayTypeDefAccess().getDefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__3__Impl
	rule__ArrayTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getArrayTypeDefAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getGroup_4()); }
(rule__ArrayTypeDef__Group_4__0)?
{ after(grammarAccess.getArrayTypeDefAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayTypeDef__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group_4__0__Impl
	rule__ArrayTypeDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getLeftSquareBracketKeyword_4_0()); }

	'[' 

{ after(grammarAccess.getArrayTypeDefAccess().getLeftSquareBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group_4__1__Impl
	rule__ArrayTypeDef__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getSizeAssignment_4_1()); }
(rule__ArrayTypeDef__SizeAssignment_4_1)
{ after(grammarAccess.getArrayTypeDefAccess().getSizeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayTypeDef__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayTypeDef__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getRightSquareBracketKeyword_4_2()); }

	']' 

{ after(grammarAccess.getArrayTypeDefAccess().getRightSquareBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FixedDataTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__0__Impl
	rule__FixedDataTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getFixedKeyword_0()); }

	'fixed' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getFixedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__1__Impl
	rule__FixedDataTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getBitsAssignment_1()); }
(rule__FixedDataTypeDef__BitsAssignment_1)
{ after(grammarAccess.getFixedDataTypeDefAccess().getBitsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__2__Impl
	rule__FixedDataTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getBitsKeyword_2()); }

	'bits' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getBitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__3__Impl
	rule__FixedDataTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getScaleKeyword_3()); }

	'scale' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getScaleKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__4__Impl
	rule__FixedDataTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getFixedDataTypeDefAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FixedDataTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FixedDataTypeDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getScaleAssignment_5()); }
(rule__FixedDataTypeDef__ScaleAssignment_5)
{ after(grammarAccess.getFixedDataTypeDefAccess().getScaleAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntegerDataTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataTypeDef__Group__0__Impl
	rule__IntegerDataTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getKindAssignment_0()); }
(rule__IntegerDataTypeDef__KindAssignment_0)
{ after(grammarAccess.getIntegerDataTypeDefAccess().getKindAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDataTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataTypeDef__Group__1__Impl
	rule__IntegerDataTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getBitsAssignment_1()); }
(rule__IntegerDataTypeDef__BitsAssignment_1)
{ after(grammarAccess.getIntegerDataTypeDefAccess().getBitsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDataTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDataTypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getBitsKeyword_2()); }

	'bits' 

{ after(grammarAccess.getIntegerDataTypeDefAccess().getBitsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__0__Impl
	rule__StructTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getStructTypeDefAction_0()); }
(

)
{ after(grammarAccess.getStructTypeDefAccess().getStructTypeDefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__1__Impl
	rule__StructTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getStructKeyword_1()); }

	'struct' 

{ after(grammarAccess.getStructTypeDefAccess().getStructKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__2__Impl
	rule__StructTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStructTypeDefAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__3__Impl
	rule__StructTypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersAssignment_3()); }
(rule__StructTypeDef__MembersAssignment_3)
{ after(grammarAccess.getStructTypeDefAccess().getMembersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__4__Impl
	rule__StructTypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getGroup_4()); }
(rule__StructTypeDef__Group_4__0)*
{ after(grammarAccess.getStructTypeDefAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStructTypeDefAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StructTypeDef__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group_4__0__Impl
	rule__StructTypeDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getStructTypeDefAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDef__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDef__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersAssignment_4_1()); }
(rule__StructTypeDef__MembersAssignment_4_1)
{ after(grammarAccess.getStructTypeDefAccess().getMembersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructTypeDefMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDefMember__Group__0__Impl
	rule__StructTypeDefMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getStructTypeDefMemberAction_0()); }
(

)
{ after(grammarAccess.getStructTypeDefMemberAccess().getStructTypeDefMemberAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDefMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDefMember__Group__1__Impl
	rule__StructTypeDefMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getTypeAssignment_1()); }
(rule__StructTypeDefMember__TypeAssignment_1)
{ after(grammarAccess.getStructTypeDefMemberAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructTypeDefMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructTypeDefMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getNameAssignment_2()); }
(rule__StructTypeDefMember__NameAssignment_2)
{ after(grammarAccess.getStructTypeDefMemberAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__0__Impl
	rule__ConstantVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getConstantVariableAction_0()); }
(

)
{ after(grammarAccess.getConstantVariableAccess().getConstantVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__1__Impl
	rule__ConstantVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getConstKeyword_1()); }

	'const' 

{ after(grammarAccess.getConstantVariableAccess().getConstKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__2__Impl
	rule__ConstantVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getTypeAssignment_2()); }
(rule__ConstantVariable__TypeAssignment_2)
{ after(grammarAccess.getConstantVariableAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__3__Impl
	rule__ConstantVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getNameAssignment_3()); }
(rule__ConstantVariable__NameAssignment_3)
{ after(grammarAccess.getConstantVariableAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__4__Impl
	rule__ConstantVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getConstantVariableAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getValueAssignment_5()); }
(rule__ConstantVariable__ValueAssignment_5)
{ after(grammarAccess.getConstantVariableAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RegisterVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__0__Impl
	rule__RegisterVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getRegisterVariableAction_0()); }
(

)
{ after(grammarAccess.getRegisterVariableAccess().getRegisterVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__1__Impl
	rule__RegisterVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getRegKeyword_1()); }

	'reg' 

{ after(grammarAccess.getRegisterVariableAccess().getRegKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__2__Impl
	rule__RegisterVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getTypeAssignment_2()); }
(rule__RegisterVariable__TypeAssignment_2)
{ after(grammarAccess.getRegisterVariableAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__3__Impl
	rule__RegisterVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getNameAssignment_3()); }
(rule__RegisterVariable__NameAssignment_3)
{ after(grammarAccess.getRegisterVariableAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__4__Impl
	rule__RegisterVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getRegisterVariableAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisterVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisterVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getAddrAssignment_5()); }
(rule__RegisterVariable__AddrAssignment_5)
{ after(grammarAccess.getRegisterVariableAccess().getAddrAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OperationStep__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationStep__Group_1__0__Impl
	rule__OperationStep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationStep__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationStepAccess().getVariableParserRuleCall_1_0()); }
	ruleVariable
{ after(grammarAccess.getOperationStepAccess().getVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationStep__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationStep__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationStep__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationStepAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getOperationStepAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Label__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelAction_0()); }
(

)
{ after(grammarAccess.getLabelAccess().getLabelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelKeyword_1()); }

	'label' 

{ after(grammarAccess.getLabelAccess().getLabelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__2__Impl
	rule__Label__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_2()); }
(rule__Label__NameAssignment_2)
{ after(grammarAccess.getLabelAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLabelAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
(rule__Variable__TypeAssignment_0)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
(rule__Variable__NameAssignment_1)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__0__Impl
	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getOperationAssignment_0()); }
(rule__OperationCall__OperationAssignment_0)
{ after(grammarAccess.getOperationCallAccess().getOperationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__1__Impl
	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__2__Impl
	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2()); }
(rule__OperationCall__Group_2__0)?
{ after(grammarAccess.getOperationCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2__0__Impl
	rule__OperationCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
(rule__OperationCall__ParamsAssignment_2_0)
{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
(rule__OperationCall__Group_2_1__0)*
{ after(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2_1__0__Impl
	rule__OperationCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
(rule__OperationCall__ParamsAssignment_2_1_1)
{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationTypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group__0__Impl
	rule__OperationTypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getResultTypeAssignment_0()); }
(rule__OperationTypeDef__ResultTypeAssignment_0)
{ after(grammarAccess.getOperationTypeDefAccess().getResultTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationTypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group__1__Impl
	rule__OperationTypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOperationTypeDefAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationTypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group__2__Impl
	rule__OperationTypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getGroup_2()); }
(rule__OperationTypeDef__Group_2__0)?
{ after(grammarAccess.getOperationTypeDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationTypeDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOperationTypeDefAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationTypeDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group_2__0__Impl
	rule__OperationTypeDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getParamsAssignment_2_0()); }
(rule__OperationTypeDef__ParamsAssignment_2_0)
{ after(grammarAccess.getOperationTypeDefAccess().getParamsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationTypeDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getGroup_2_1()); }
(rule__OperationTypeDef__Group_2_1__0)*
{ after(grammarAccess.getOperationTypeDefAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationTypeDef__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group_2_1__0__Impl
	rule__OperationTypeDef__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getOperationTypeDefAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationTypeDef__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationTypeDef__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getParamsAssignment_2_1_1()); }
(rule__OperationTypeDef__ParamsAssignment_2_1_1)
{ after(grammarAccess.getOperationTypeDefAccess().getParamsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getOperationAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_1()); }
(rule__Operation__NameAssignment_1)
{ after(grammarAccess.getOperationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeAssignment_2()); }
(rule__Operation__TypeAssignment_2)
{ after(grammarAccess.getOperationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3()); }
(rule__Operation__Group_3__0)?
{ after(grammarAccess.getOperationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentAssignment_4()); }
(rule__Operation__ContentAssignment_4)
{ after(grammarAccess.getOperationAccess().getContentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Operation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__0__Impl
	rule__Operation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOverridesKeyword_3_0()); }

	'overrides' 

{ after(grammarAccess.getOperationAccess().getOverridesKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOverridesAssignment_3_1()); }
(rule__Operation__OverridesAssignment_3_1)
{ after(grammarAccess.getOperationAccess().getOverridesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LazyParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LazyParameter__Group__0__Impl
	rule__LazyParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LazyParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLazyParameterAccess().getLazyKeyword_0()); }

	'lazy' 

{ after(grammarAccess.getLazyParameterAccess().getLazyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LazyParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LazyParameter__Group__1__Impl
	rule__LazyParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LazyParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLazyParameterAccess().getParamnameAssignment_1()); }
(rule__LazyParameter__ParamnameAssignment_1)
{ after(grammarAccess.getLazyParameterAccess().getParamnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LazyParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LazyParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LazyParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLazyParameterAccess().getTypeAssignment_2()); }
(rule__LazyParameter__TypeAssignment_2)
{ after(grammarAccess.getLazyParameterAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__0__Impl
	rule__ParameterVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getParameterVariableAction_0()); }
(

)
{ after(grammarAccess.getParameterVariableAccess().getParameterVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__1__Impl
	rule__ParameterVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getKindAssignment_1()); }
(rule__ParameterVariable__KindAssignment_1)?
{ after(grammarAccess.getParameterVariableAccess().getKindAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__2__Impl
	rule__ParameterVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getTypeAssignment_2()); }
(rule__ParameterVariable__TypeAssignment_2)
{ after(grammarAccess.getParameterVariableAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__3__Impl
	rule__ParameterVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getNameAssignment_3()); }
(rule__ParameterVariable__NameAssignment_3)
{ after(grammarAccess.getParameterVariableAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getGroup_4()); }
(rule__ParameterVariable__Group_4__0)?
{ after(grammarAccess.getParameterVariableAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ParameterVariable__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group_4__0__Impl
	rule__ParameterVariable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getEqualsSignKeyword_4_0()); }

	'=' 

{ after(grammarAccess.getParameterVariableAccess().getEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterVariable__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterVariable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getDefaultAssignment_4_1()); }
(rule__ParameterVariable__DefaultAssignment_4_1)
{ after(grammarAccess.getParameterVariableAccess().getDefaultAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group__0__Impl
	rule__XExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getXExpression6ParserRuleCall_0()); }
	ruleXExpression6
{ after(grammarAccess.getXExpressionAccess().getXExpression6ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getGroup_1()); }
(rule__XExpression__Group_1__0)?
{ after(grammarAccess.getXExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group_1__0__Impl
	rule__XExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getXExpressionAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getTypeAssignment_1_1()); }
(rule__XExpression__TypeAssignment_1_1)
{ after(grammarAccess.getXExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionBlock__Group__0__Impl
	rule__XExpressionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getXExpressionBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionBlock__Group__1__Impl
	rule__XExpressionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionBlockAccess().getOperationBlockAction_1()); }
(

)
{ after(grammarAccess.getXExpressionBlockAccess().getOperationBlockAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionBlock__Group__2__Impl
	rule__XExpressionBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionBlockAccess().getStepsAssignment_2()); }
(rule__XExpressionBlock__StepsAssignment_2)*
{ after(grammarAccess.getXExpressionBlockAccess().getStepsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getXExpressionBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XSizeOfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__0__Impl
	rule__XSizeOfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getSizeofKeyword_0()); }

	'sizeof' 

{ after(grammarAccess.getXSizeOfExpressionAccess().getSizeofKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSizeOfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__1__Impl
	rule__XSizeOfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXSizeOfExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSizeOfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__2__Impl
	rule__XSizeOfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getTypeAssignment_2()); }
(rule__XSizeOfExpression__TypeAssignment_2)
{ after(grammarAccess.getXSizeOfExpressionAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSizeOfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSizeOfExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXSizeOfExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XStructExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__0__Impl
	rule__XStructExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getXStructExpressionAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__1__Impl
	rule__XStructExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesAssignment_1()); }
(rule__XStructExpression__ValuesAssignment_1)
{ after(grammarAccess.getXStructExpressionAccess().getValuesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__2__Impl
	rule__XStructExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getGroup_2()); }
(rule__XStructExpression__Group_2__0)*
{ after(grammarAccess.getXStructExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__3__Impl
	rule__XStructExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getCommaKeyword_3()); }
(
	',' 
)?
{ after(grammarAccess.getXStructExpressionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getXStructExpressionAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XStructExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group_2__0__Impl
	rule__XStructExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getXStructExpressionAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStructExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStructExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesAssignment_2_1()); }
(rule__XStructExpression__ValuesAssignment_2_1)
{ after(grammarAccess.getXStructExpressionAccess().getValuesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression1__Group__0__Impl
	rule__XExpression1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getOperatorAssignment_0()); }
(rule__XExpression1__OperatorAssignment_0)*
{ after(grammarAccess.getXExpression1Access().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getAAssignment_1()); }
(rule__XExpression1__AAssignment_1)
{ after(grammarAccess.getXExpression1Access().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression0__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group__0__Impl
	rule__XExpression0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getAAssignment_0()); }
(rule__XExpression0__AAssignment_0)
{ after(grammarAccess.getXExpression0Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression0__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getGroup_1()); }
(rule__XExpression0__Group_1__0)*
{ after(grammarAccess.getXExpression0Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression0__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group_1__0__Impl
	rule__XExpression0__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getHyphenMinusGreaterThanSignKeyword_1_0()); }

	'->' 

{ after(grammarAccess.getXExpression0Access().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression0__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression0__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getMemberAssignment_1_1()); }
(rule__XExpression0__MemberAssignment_1_1)
{ after(grammarAccess.getXExpression0Access().getMemberAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionM1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group__0__Impl
	rule__XExpressionM1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getAAssignment_0()); }
(rule__XExpressionM1__AAssignment_0)
{ after(grammarAccess.getXExpressionM1Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionM1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getGroup_1()); }
(rule__XExpressionM1__Group_1__0)*
{ after(grammarAccess.getXExpressionM1Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionM1__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group_1__0__Impl
	rule__XExpressionM1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getXExpressionM1Access().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionM1__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group_1__1__Impl
	rule__XExpressionM1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getIndexAssignment_1_1()); }
(rule__XExpressionM1__IndexAssignment_1_1)
{ after(grammarAccess.getXExpressionM1Access().getIndexAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionM1__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionM1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getXExpressionM1Access().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XExpression2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group__0__Impl
	rule__XExpression2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getAAssignment_0()); }
(rule__XExpression2__AAssignment_0)
{ after(grammarAccess.getXExpression2Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getGroup_1()); }
(rule__XExpression2__Group_1__0)*
{ after(grammarAccess.getXExpression2Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression2__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group_1__0__Impl
	rule__XExpression2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getOpAssignment_1_0()); }
(rule__XExpression2__OpAssignment_1_0)
{ after(grammarAccess.getXExpression2Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression2__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getBAssignment_1_1()); }
(rule__XExpression2__BAssignment_1_1)
{ after(grammarAccess.getXExpression2Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression3__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group__0__Impl
	rule__XExpression3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getAAssignment_0()); }
(rule__XExpression3__AAssignment_0)
{ after(grammarAccess.getXExpression3Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression3__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getGroup_1()); }
(rule__XExpression3__Group_1__0)*
{ after(grammarAccess.getXExpression3Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression3__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group_1__0__Impl
	rule__XExpression3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getOpAssignment_1_0()); }
(rule__XExpression3__OpAssignment_1_0)
{ after(grammarAccess.getXExpression3Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression3__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression3__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getBAssignment_1_1()); }
(rule__XExpression3__BAssignment_1_1)
{ after(grammarAccess.getXExpression3Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression4__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group__0__Impl
	rule__XExpression4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getAAssignment_0()); }
(rule__XExpression4__AAssignment_0)
{ after(grammarAccess.getXExpression4Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression4__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getGroup_1()); }
(rule__XExpression4__Group_1__0)*
{ after(grammarAccess.getXExpression4Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression4__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group_1__0__Impl
	rule__XExpression4__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getOpAssignment_1_0()); }
(rule__XExpression4__OpAssignment_1_0)
{ after(grammarAccess.getXExpression4Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression4__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression4__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getBAssignment_1_1()); }
(rule__XExpression4__BAssignment_1_1)
{ after(grammarAccess.getXExpression4Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression5__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group__0__Impl
	rule__XExpression5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getAAssignment_0()); }
(rule__XExpression5__AAssignment_0)
{ after(grammarAccess.getXExpression5Access().getAAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression5__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getGroup_1()); }
(rule__XExpression5__Group_1__0)*
{ after(grammarAccess.getXExpression5Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression5__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group_1__0__Impl
	rule__XExpression5__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getOpAssignment_1_0()); }
(rule__XExpression5__OpAssignment_1_0)
{ after(grammarAccess.getXExpression5Access().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression5__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression5__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getBAssignment_1_1()); }
(rule__XExpression5__BAssignment_1_1)
{ after(grammarAccess.getXExpression5Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression6__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group__0__Impl
	rule__XExpression6__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getGroup_0()); }
(rule__XExpression6__Group_0__0)?
{ after(grammarAccess.getXExpression6Access().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression6__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getAAssignment_1()); }
(rule__XExpression6__AAssignment_1)
{ after(grammarAccess.getXExpression6Access().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpression6__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group_0__0__Impl
	rule__XExpression6__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getRefAssignment_0_0()); }
(rule__XExpression6__RefAssignment_0_0)
{ after(grammarAccess.getXExpression6Access().getRefAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpression6__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpression6__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getOpAssignment_0_1()); }
(rule__XExpression6__OpAssignment_0_1)
{ after(grammarAccess.getXExpression6Access().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTopLevelExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_0__0__Impl
	rule__XTopLevelExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getAnnotationParserRuleCall_0_0()); }
	ruleAnnotation
{ after(grammarAccess.getXTopLevelExpressionAccess().getAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTopLevelExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTopLevelExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_1__0__Impl
	rule__XTopLevelExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getXExpressionParserRuleCall_1_0()); }
	ruleXExpression
{ after(grammarAccess.getXTopLevelExpressionAccess().getXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTopLevelExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTopLevelExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_2__0__Impl
	rule__XTopLevelExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getXErrorExpressionParserRuleCall_2_0()); }
	ruleXErrorExpression
{ after(grammarAccess.getXTopLevelExpressionAccess().getXErrorExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTopLevelExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTopLevelExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTopLevelExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getXTopLevelExpressionAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XErrorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XErrorExpression__Group__0__Impl
	rule__XErrorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XErrorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXErrorExpressionAccess().getLevelAssignment_0()); }
(rule__XErrorExpression__LevelAssignment_0)
{ after(grammarAccess.getXErrorExpressionAccess().getLevelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XErrorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XErrorExpression__Group__1__Impl
	rule__XErrorExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XErrorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXErrorExpressionAccess().getMsgAssignment_1()); }
(rule__XErrorExpression__MsgAssignment_1)
{ after(grammarAccess.getXErrorExpressionAccess().getMsgAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XErrorExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XErrorExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XErrorExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXErrorExpressionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getXErrorExpressionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XIsLiteralExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__0__Impl
	rule__XIsLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getIsliteralKeyword_0()); }

	'isliteral' 

{ after(grammarAccess.getXIsLiteralExpressionAccess().getIsliteralKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIsLiteralExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__1__Impl
	rule__XIsLiteralExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXIsLiteralExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIsLiteralExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__2__Impl
	rule__XIsLiteralExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getRefAssignment_2()); }
(rule__XIsLiteralExpression__RefAssignment_2)
{ after(grammarAccess.getXIsLiteralExpressionAccess().getRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIsLiteralExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIsLiteralExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXIsLiteralExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__0__Impl
	rule__XParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__1__Impl
	rule__XParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getAAssignment_1()); }
(rule__XParenthesizedExpression__AAssignment_1)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__AnnotationDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__DefinitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getDefinitionIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationAccess().getDefinitionIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getNameLibraryNameParserRuleCall_1_0()); }
	ruleLibraryName{ after(grammarAccess.getLibraryAccess().getNameLibraryNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__UseAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getUseLibraryNameParserRuleCall_3_1_0()); }
	ruleLibraryName{ after(grammarAccess.getLibraryAccess().getUseLibraryNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__ItemsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getItemsLibraryItemParserRuleCall_4_0()); }
	ruleLibraryItem{ after(grammarAccess.getLibraryAccess().getItemsLibraryItemParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefTypeDefParserRuleCall_3_0()); }
	ruleTypeDef{ after(grammarAccess.getTypeAccess().getDefTypeDefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PointerTypeDef__DefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointerTypeDefAccess().getDefTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getPointerTypeDefAccess().getDefTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__DefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getDefTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getArrayTypeDefAccess().getDefTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayTypeDef__SizeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayTypeDefAccess().getSizeXExpressionParserRuleCall_4_1_0()); }
	ruleXExpression{ after(grammarAccess.getArrayTypeDefAccess().getSizeXExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefTypeDef__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTypeDefAccess().getTypeQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getRefTypeDefAccess().getTypeQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__BitsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getFixedDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedDataTypeDef__ScaleAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedDataTypeDefAccess().getScaleREALTerminalRuleCall_5_0()); }
	RULE_REAL{ after(grammarAccess.getFixedDataTypeDefAccess().getScaleREALTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__KindAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getKindIntegerKindEnumRuleCall_0_0()); }
	ruleIntegerKind{ after(grammarAccess.getIntegerDataTypeDefAccess().getKindIntegerKindEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDataTypeDef__BitsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getIntegerDataTypeDefAccess().getBitsINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__MembersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_3_0()); }
	ruleStructTypeDefMember{ after(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDef__MembersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_4_1_0()); }
	ruleStructTypeDefMember{ after(grammarAccess.getStructTypeDefAccess().getMembersStructTypeDefMemberParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getTypeTypeDefParserRuleCall_1_0()); }
	ruleTypeDef{ after(grammarAccess.getStructTypeDefMemberAccess().getTypeTypeDefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructTypeDefMember__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeDefMemberAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStructTypeDefMemberAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getConstantVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getConstantVariableAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantVariable__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantVariableAccess().getValueXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getConstantVariableAccess().getValueXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getRegisterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getRegisterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisterVariable__AddrAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisterVariableAccess().getAddrXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getRegisterVariableAccess().getAddrXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeTypeDefParserRuleCall_0_0()); }
	ruleTypeDef{ after(grammarAccess.getVariableAccess().getTypeTypeDefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VarAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getVariableReferenceAccess().getVarQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__OperationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getOperationQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getOperationCallAccess().getOperationQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_0_0()); }
	ruleOperationCallParameter{ after(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_1_1_0()); }
	ruleOperationCallParameter{ after(grammarAccess.getOperationCallAccess().getParamsOperationCallParameterParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__ResultTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getResultTypeTypeDefParserRuleCall_0_0()); }
	ruleTypeDef{ after(grammarAccess.getOperationTypeDefAccess().getResultTypeTypeDefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__ParamsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getParamsOperationParameterParserRuleCall_2_0_0()); }
	ruleOperationParameter{ after(grammarAccess.getOperationTypeDefAccess().getParamsOperationParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationTypeDef__ParamsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationTypeDefAccess().getParamsOperationParameterParserRuleCall_2_1_1_0()); }
	ruleOperationParameter{ after(grammarAccess.getOperationTypeDefAccess().getParamsOperationParameterParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeOperationTypeDefParserRuleCall_2_0()); }
	ruleOperationTypeDef{ after(grammarAccess.getOperationAccess().getTypeOperationTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OverridesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOverridesQualifiedNameParserRuleCall_3_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getOperationAccess().getOverridesQualifiedNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ContentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getContentXExpressionParserRuleCall_4_0()); }
	ruleXExpression{ after(grammarAccess.getOperationAccess().getContentXExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LazyParameter__ParamnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLazyParameterAccess().getParamnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLazyParameterAccess().getParamnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LazyParameter__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLazyParameterAccess().getTypeOperationTypeDefParserRuleCall_2_0()); }
	ruleOperationTypeDef{ after(grammarAccess.getLazyParameterAccess().getTypeOperationTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__KindAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getKindParameterKindEnumRuleCall_1_0()); }
	ruleParameterKind{ after(grammarAccess.getParameterVariableAccess().getKindParameterKindEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getParameterVariableAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getParameterVariableAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterVariable__DefaultAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterVariableAccess().getDefaultLITERALParserRuleCall_4_1_0()); }
	ruleLITERAL{ after(grammarAccess.getParameterVariableAccess().getDefaultLITERALParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionAccess().getTypeTypeDefParserRuleCall_1_1_0()); }
	ruleTypeDef{ after(grammarAccess.getXExpressionAccess().getTypeTypeDefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionBlock__StepsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionBlockAccess().getStepsOperationStepParserRuleCall_2_0()); }
	ruleOperationStep{ after(grammarAccess.getXExpressionBlockAccess().getStepsOperationStepParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSizeOfExpression__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSizeOfExpressionAccess().getTypeTypeDefParserRuleCall_2_0()); }
	ruleTypeDef{ after(grammarAccess.getXSizeOfExpressionAccess().getTypeTypeDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__ValuesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStructExpression__ValuesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_2_1_0()); }
	ruleXExpression{ after(grammarAccess.getXStructExpressionAccess().getValuesXExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getOperatorUNARY_OPERATOREnumRuleCall_0_0()); }
	ruleUNARY_OPERATOR{ after(grammarAccess.getXExpression1Access().getOperatorUNARY_OPERATOREnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression1__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression1Access().getAXExpression0ParserRuleCall_1_0()); }
	ruleXExpression0{ after(grammarAccess.getXExpression1Access().getAXExpression0ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getAXExpressionM1ParserRuleCall_0_0()); }
	ruleXExpressionM1{ after(grammarAccess.getXExpression0Access().getAXExpressionM1ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression0__MemberAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression0Access().getMemberIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getXExpression0Access().getMemberIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getAXPrimaryExpressionParserRuleCall_0_0()); }
	ruleXPrimaryExpression{ after(grammarAccess.getXExpressionM1Access().getAXPrimaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionM1__IndexAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionM1Access().getIndexXExpressionParserRuleCall_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXExpressionM1Access().getIndexXExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getAXExpression1ParserRuleCall_0_0()); }
	ruleXExpression1{ after(grammarAccess.getXExpression2Access().getAXExpression1ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getOpMULTIPLICATIVE_OPERATOREnumRuleCall_1_0_0()); }
	ruleMULTIPLICATIVE_OPERATOR{ after(grammarAccess.getXExpression2Access().getOpMULTIPLICATIVE_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression2__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression2Access().getBXExpression2ParserRuleCall_1_1_0()); }
	ruleXExpression2{ after(grammarAccess.getXExpression2Access().getBXExpression2ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getAXExpression2ParserRuleCall_0_0()); }
	ruleXExpression2{ after(grammarAccess.getXExpression3Access().getAXExpression2ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getOpADDITIVE_OPERATOREnumRuleCall_1_0_0()); }
	ruleADDITIVE_OPERATOR{ after(grammarAccess.getXExpression3Access().getOpADDITIVE_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression3__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression3Access().getBXExpression2ParserRuleCall_1_1_0()); }
	ruleXExpression2{ after(grammarAccess.getXExpression3Access().getBXExpression2ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getAXExpression3ParserRuleCall_0_0()); }
	ruleXExpression3{ after(grammarAccess.getXExpression4Access().getAXExpression3ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getOpEQUALITY_OPERATOREnumRuleCall_1_0_0()); }
	ruleEQUALITY_OPERATOR{ after(grammarAccess.getXExpression4Access().getOpEQUALITY_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression4__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression4Access().getBXExpression3ParserRuleCall_1_1_0()); }
	ruleXExpression3{ after(grammarAccess.getXExpression4Access().getBXExpression3ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__AAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getAXExpression4ParserRuleCall_0_0()); }
	ruleXExpression4{ after(grammarAccess.getXExpression5Access().getAXExpression4ParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getOpBOOLEAN_OPERATOREnumRuleCall_1_0_0()); }
	ruleBOOLEAN_OPERATOR{ after(grammarAccess.getXExpression5Access().getOpBOOLEAN_OPERATOREnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression5__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression5Access().getBXExpression4ParserRuleCall_1_1_0()); }
	ruleXExpression4{ after(grammarAccess.getXExpression5Access().getBXExpression4ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__RefAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getRefVariableReferenceParserRuleCall_0_0_0()); }
	ruleVariableReference{ after(grammarAccess.getXExpression6Access().getRefVariableReferenceParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getOpOpSingleAssignEnumRuleCall_0_1_0()); }
	ruleOpSingleAssign{ after(grammarAccess.getXExpression6Access().getOpOpSingleAssignEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpression6__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpression6Access().getAXExpression5ParserRuleCall_1_0()); }
	ruleXExpression5{ after(grammarAccess.getXExpression6Access().getAXExpression5ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionLiteralAccess().getValueLITERALParserRuleCall_0()); }
	ruleLITERAL{ after(grammarAccess.getXExpressionLiteralAccess().getValueLITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XErrorExpression__LevelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXErrorExpressionAccess().getLevelErrorLevelsEnumRuleCall_0_0()); }
	ruleErrorLevels{ after(grammarAccess.getXErrorExpressionAccess().getLevelErrorLevelsEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XErrorExpression__MsgAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXErrorExpressionAccess().getMsgSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getXErrorExpressionAccess().getMsgSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIsLiteralExpression__RefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIsLiteralExpressionAccess().getRefVariableReferenceParserRuleCall_2_0()); }
	ruleVariableReference{ after(grammarAccess.getXIsLiteralExpressionAccess().getRefVariableReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__AAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getAXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXParenthesizedExpressionAccess().getAXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HEXINT : '0x' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_BINARY : 'b' ('0'|'1')+;

RULE_REAL : RULE_INT '.' RULE_INT?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



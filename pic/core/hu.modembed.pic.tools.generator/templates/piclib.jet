<%@ jet package="hu.modembed.pic.tools.generator.template" imports="org.w3c.dom.* hu.e.compiler.*"
class="PICLibraryTemplate" %>
<% org.w3c.dom.Element pic = (org.w3c.dom.Element)argument; %>
<% String arch = pic.getAttribute("edc:arch");%>
/*
 * Library for <%=pic.getAttribute("edc:name")%>
 * <%=pic.getAttribute("edc:desc")%>
 * Architecture: <%=arch%>
 */
library microchip.<%=pic.getAttribute("edc:name")%>;

	use e.platform;

/********************
 * Special function registers
 ********************/

<%
	Element dataspace = (Element)pic.getElementsByTagName("edc:DataSpace").item(0);
	Element regardlessOfMode = (Element)dataspace.getElementsByTagName("edc:RegardlessOfMode").item(0);
	
	NodeList SFRDataSectors = regardlessOfMode.getElementsByTagName("edc:SFRDataSector");
	for(int i=0;i<SFRDataSectors.getLength();i++){
		Element SFRDataSector = (Element)SFRDataSectors.item(i);
		String beginAddrText = SFRDataSector.getAttribute("edc:beginaddr");
		int beginAddr = ECompiler.convertLiteral(beginAddrText);
		NodeList elements = SFRDataSector.getChildNodes();
		for (int j=0;j<elements.getLength();j++) if (elements.item(j) instanceof Element){
			Element item = (Element)elements.item(j);
			String name = item.getNodeName();
			if ("edc:SFRDef".equals(name) || "edc:JoinedSFRDef".equals(name)){
				int size = ECompiler.convertLiteral(item.getAttribute("edc:nzwidth"));
				size = size/8;
				String type = (size==2) ? "uint16" :"uint8";
%>

/*
 * <%=item.getAttribute("edc:name")%>
 * <%=item.getAttribute("edc:desc")%>
 */
reg <%=type%> <%=item.getAttribute("edc:cname")%> : 0x<%=Integer.toHexString(beginAddr)%>; 
<%
				beginAddr += size;
			}
			if ("edc:AdjustPoint".equals(name)){
				int size = ECompiler.convertLiteral(item.getAttribute("edc:offset"));
				beginAddr += size;
			}
			if ("edc:Mirror".equals(name)){
				int size = ECompiler.convertLiteral(item.getAttribute("edc:nzsize"));
				beginAddr += size;
			}
		}
	}
%>


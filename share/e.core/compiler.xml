<?xml version="1.0" encoding="UTF-8"?>
<project name="compiler">
	
	<dirname property="included.basedir" file="${ant.file.compiler}"/>
	<property file="${included.basedir}/metamodels.properties"/>
	
	<macrodef name="inputmodel">
		<attribute name="name"/>
		<attribute name="resource"/>
		<sequential>
			<epsilon.emf.loadModel
						name="@{name}"
						modelfile="@{resource}"
						read="true"
						store="false"
					/>
		</sequential>
	</macrodef>
	
	<macrodef name="outputmodel">
		<attribute name="name"/>
		<attribute name="resource"/>
		<attribute name="mmuri"/>
		<sequential>
			<epsilon.emf.loadModel
				name="@{name}"
				modelfile="@{resource}"
				metamodeluri="@{mmuri}"
				read="false"
				store="true"
			/>
		</sequential>
	</macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: compiler.assemble          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="compiler.assemble">
        <attribute name="input" />
    	<attribute name="output" />
        <sequential>
        	<epsilon.etl src="${included.basedir}/compiler.assemble.etl">
        		<model ref="@{input}" as="asm"/>
        		<model ref="@{output}" as="hex"/>
        	</epsilon.etl>
        </sequential>
    </macrodef>

	<macrodef name="compiler.disassemble">
		<attribute name="instructionSet" />
		<attribute name="input" />
		<attribute name="output" />
		<sequential>
			<epsilon.eol src="${included.basedir}/disassemble.eol">
				<model ref="@{instructionSet}" as="instructionSet"/>
				<model ref="@{input}" as="hexFile"/>
				<model ref="@{output}" as="output"/>
			</epsilon.eol>
		</sequential>
	</macrodef>
	

</project>